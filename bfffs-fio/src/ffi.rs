#![allow(non_camel_case_types)]
#![allow(non_upper_case_globals)]
#![allow(non_snake_case)]
#![allow(unused)]
#![cfg_attr(test, allow(deref_nullptr))]
#![allow(clippy::all)]
use libc::timespec;
/* automatically generated by rust-bindgen 0.70.1 */

#[repr(C)]
#[derive(Default)]
pub struct __IncompleteArrayField<T>(::std::marker::PhantomData<T>, [T; 0]);
impl<T> __IncompleteArrayField<T> {
    #[inline]
    pub const fn new() -> Self {
        __IncompleteArrayField(::std::marker::PhantomData, [])
    }

    #[inline]
    pub fn as_ptr(&self) -> *const T {
        self as *const _ as *const T
    }

    #[inline]
    pub fn as_mut_ptr(&mut self) -> *mut T {
        self as *mut _ as *mut T
    }

    #[inline]
    pub unsafe fn as_slice(&self, len: usize) -> &[T] {
        ::std::slice::from_raw_parts(self.as_ptr(), len)
    }

    #[inline]
    pub unsafe fn as_mut_slice(&mut self, len: usize) -> &mut [T] {
        ::std::slice::from_raw_parts_mut(self.as_mut_ptr(), len)
    }
}
impl<T> ::std::fmt::Debug for __IncompleteArrayField<T> {
    fn fmt(&self, fmt: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        fmt.write_str("__IncompleteArrayField")
    }
}
pub const FIO_IOOPS_VERSION: u32 = 36;
pub type __int32_t = libc::c_int;
pub type __int64_t = libc::c_long;
pub type __time_t = __int64_t;
pub type __pid_t = __int32_t;
pub type pthread_t = u64;
pub type pthread_mutex_t = u64;
pub type pthread_cond_t = u64;
pub type pid_t = __pid_t;
pub type time_t = __time_t;
#[repr(C)]
#[repr(align(8))]
#[derive(Debug, Copy, Clone)]
pub struct rusage {
    pub _bindgen_opaque_blob: [u64; 18usize],
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of rusage"][::std::mem::size_of::<rusage>() - 144usize];
    ["Alignment of rusage"][::std::mem::align_of::<rusage>() - 8usize];
};
pub type FILE = [u64; 39usize];
pub const fio_ddir_DDIR_READ: fio_ddir = 0;
pub const fio_ddir_DDIR_WRITE: fio_ddir = 1;
pub const fio_ddir_DDIR_TRIM: fio_ddir = 2;
pub const fio_ddir_DDIR_SYNC: fio_ddir = 3;
pub const fio_ddir_DDIR_DATASYNC: fio_ddir = 4;
pub const fio_ddir_DDIR_SYNC_FILE_RANGE: fio_ddir = 5;
pub const fio_ddir_DDIR_WAIT: fio_ddir = 6;
pub const fio_ddir_DDIR_LAST: fio_ddir = 7;
pub const fio_ddir_DDIR_INVAL: fio_ddir = -1;
pub const fio_ddir_DDIR_TIMEOUT: fio_ddir = -2;
pub const fio_ddir_DDIR_RWDIR_CNT: fio_ddir = 3;
pub const fio_ddir_DDIR_RWDIR_SYNC_CNT: fio_ddir = 4;
pub type fio_ddir = libc::c_int;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct flist_head {
    pub next: *mut flist_head,
    pub prev: *mut flist_head,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of flist_head"][::std::mem::size_of::<flist_head>() - 16usize];
    ["Alignment of flist_head"][::std::mem::align_of::<flist_head>() - 8usize];
    ["Offset of field: flist_head::next"]
        [::std::mem::offset_of!(flist_head, next) - 0usize];
    ["Offset of field: flist_head::prev"]
        [::std::mem::offset_of!(flist_head, prev) - 8usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct taus88_state {
    pub s1: libc::c_uint,
    pub s2: libc::c_uint,
    pub s3: libc::c_uint,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of taus88_state"][::std::mem::size_of::<taus88_state>() - 12usize];
    ["Alignment of taus88_state"]
        [::std::mem::align_of::<taus88_state>() - 4usize];
    ["Offset of field: taus88_state::s1"]
        [::std::mem::offset_of!(taus88_state, s1) - 0usize];
    ["Offset of field: taus88_state::s2"]
        [::std::mem::offset_of!(taus88_state, s2) - 4usize];
    ["Offset of field: taus88_state::s3"]
        [::std::mem::offset_of!(taus88_state, s3) - 8usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct taus258_state {
    pub s1: u64,
    pub s2: u64,
    pub s3: u64,
    pub s4: u64,
    pub s5: u64,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of taus258_state"][::std::mem::size_of::<taus258_state>() - 40usize];
    ["Alignment of taus258_state"]
        [::std::mem::align_of::<taus258_state>() - 8usize];
    ["Offset of field: taus258_state::s1"]
        [::std::mem::offset_of!(taus258_state, s1) - 0usize];
    ["Offset of field: taus258_state::s2"]
        [::std::mem::offset_of!(taus258_state, s2) - 8usize];
    ["Offset of field: taus258_state::s3"]
        [::std::mem::offset_of!(taus258_state, s3) - 16usize];
    ["Offset of field: taus258_state::s4"]
        [::std::mem::offset_of!(taus258_state, s4) - 24usize];
    ["Offset of field: taus258_state::s5"]
        [::std::mem::offset_of!(taus258_state, s5) - 32usize];
};
#[repr(C)]
#[repr(align(8))]
#[derive(Debug, Copy, Clone)]
pub struct frand_state {
    pub _bindgen_opaque_blob: [u64; 6usize],
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union frand_state__bindgen_ty_1 {
    pub state32: taus88_state,
    pub state64: taus258_state,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of frand_state__bindgen_ty_1"]
        [::std::mem::size_of::<frand_state__bindgen_ty_1>() - 40usize];
    ["Alignment of frand_state__bindgen_ty_1"]
        [::std::mem::align_of::<frand_state__bindgen_ty_1>() - 8usize];
    ["Offset of field: frand_state__bindgen_ty_1::state32"]
        [::std::mem::offset_of!(frand_state__bindgen_ty_1, state32) - 0usize];
    ["Offset of field: frand_state__bindgen_ty_1::state64"]
        [::std::mem::offset_of!(frand_state__bindgen_ty_1, state64) - 0usize];
};
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of frand_state"][::std::mem::size_of::<frand_state>() - 48usize];
    ["Alignment of frand_state"]
        [::std::mem::align_of::<frand_state>() - 8usize];
};
#[repr(C)]
#[repr(align(8))]
#[derive(Debug, Copy, Clone)]
pub struct zipf_state {
    pub _bindgen_opaque_blob: [u64; 13usize],
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of zipf_state"][::std::mem::size_of::<zipf_state>() - 104usize];
    ["Alignment of zipf_state"][::std::mem::align_of::<zipf_state>() - 8usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct axmap {
    _unused: [u8; 0],
}
#[repr(C)]
#[repr(align(8))]
#[derive(Debug, Copy, Clone)]
pub struct fio_lfsr {
    pub _bindgen_opaque_blob: [u64; 8usize],
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of fio_lfsr"][::std::mem::size_of::<fio_lfsr>() - 64usize];
    ["Alignment of fio_lfsr"][::std::mem::align_of::<fio_lfsr>() - 8usize];
};
#[repr(C)]
#[repr(align(8))]
#[derive(Debug, Copy, Clone)]
pub struct gauss_state {
    pub _bindgen_opaque_blob: [u64; 9usize],
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of gauss_state"][::std::mem::size_of::<gauss_state>() - 72usize];
    ["Alignment of gauss_state"]
        [::std::mem::align_of::<gauss_state>() - 8usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct zoned_block_device_info {
    _unused: [u8; 0],
}
pub const fio_filetype_FIO_TYPE_FILE: fio_filetype = 1;
pub const fio_filetype_FIO_TYPE_BLOCK: fio_filetype = 2;
pub const fio_filetype_FIO_TYPE_CHAR: fio_filetype = 3;
pub const fio_filetype_FIO_TYPE_PIPE: fio_filetype = 4;
pub type fio_filetype = libc::c_uint;
pub const fio_file_flags_FIO_FILE_open: fio_file_flags = 1;
pub const fio_file_flags_FIO_FILE_closing: fio_file_flags = 2;
pub const fio_file_flags_FIO_FILE_extend: fio_file_flags = 4;
pub const fio_file_flags_FIO_FILE_done: fio_file_flags = 8;
pub const fio_file_flags_FIO_FILE_size_known: fio_file_flags = 16;
pub const fio_file_flags_FIO_FILE_hashed: fio_file_flags = 32;
pub const fio_file_flags_FIO_FILE_partial_mmap: fio_file_flags = 64;
pub const fio_file_flags_FIO_FILE_axmap: fio_file_flags = 128;
pub const fio_file_flags_FIO_FILE_lfsr: fio_file_flags = 256;
pub const fio_file_flags_FIO_FILE_smalloc: fio_file_flags = 512;
pub type fio_file_flags = libc::c_uint;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct fio_file {
    pub hash_list:        flist_head,
    pub filetype:         fio_filetype,
    pub fd:               libc::c_int,
    pub shadow_fd:        libc::c_int,
    pub major:            libc::c_uint,
    pub minor:            libc::c_uint,
    pub fileno:           libc::c_int,
    pub file_name:        *mut libc::c_char,
    pub real_file_size:   u64,
    pub file_offset:      u64,
    pub io_size:          u64,
    pub ruhs_info:        *mut fio_ruhs_info,
    pub ruhs_scheme:      *mut fio_ruhs_scheme,
    pub zbd_info:         *mut zoned_block_device_info,
    pub min_zone:         u32,
    pub max_zone:         u32,
    pub last_pos:         [u64; 3usize],
    pub last_start:       [u64; 3usize],
    pub first_write:      u64,
    pub last_write:       u64,
    pub last_write_comp:  *mut u64,
    pub last_write_idx:   libc::c_uint,
    pub engine_pos:       u64,
    pub engine_data:      *mut libc::c_void,
    pub __bindgen_anon_1: fio_file__bindgen_ty_1,
    pub __bindgen_anon_2: fio_file__bindgen_ty_2,
    pub __bindgen_anon_3: fio_file__bindgen_ty_3,
    pub references:       libc::c_int,
    pub flags:            fio_file_flags,
    pub du:               *mut disk_util,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union fio_file__bindgen_ty_1 {
    pub lock:   *mut fio_sem,
    pub rwlock: *mut fio_rwlock,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of fio_file__bindgen_ty_1"]
        [::std::mem::size_of::<fio_file__bindgen_ty_1>() - 8usize];
    ["Alignment of fio_file__bindgen_ty_1"]
        [::std::mem::align_of::<fio_file__bindgen_ty_1>() - 8usize];
    ["Offset of field: fio_file__bindgen_ty_1::lock"]
        [::std::mem::offset_of!(fio_file__bindgen_ty_1, lock) - 0usize];
    ["Offset of field: fio_file__bindgen_ty_1::rwlock"]
        [::std::mem::offset_of!(fio_file__bindgen_ty_1, rwlock) - 0usize];
};
#[repr(C)]
#[derive(Copy, Clone)]
pub union fio_file__bindgen_ty_2 {
    pub io_axmap: *mut axmap,
    pub lfsr:     fio_lfsr,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of fio_file__bindgen_ty_2"]
        [::std::mem::size_of::<fio_file__bindgen_ty_2>() - 64usize];
    ["Alignment of fio_file__bindgen_ty_2"]
        [::std::mem::align_of::<fio_file__bindgen_ty_2>() - 8usize];
    ["Offset of field: fio_file__bindgen_ty_2::io_axmap"]
        [::std::mem::offset_of!(fio_file__bindgen_ty_2, io_axmap) - 0usize];
    ["Offset of field: fio_file__bindgen_ty_2::lfsr"]
        [::std::mem::offset_of!(fio_file__bindgen_ty_2, lfsr) - 0usize];
};
#[repr(C)]
#[derive(Copy, Clone)]
pub union fio_file__bindgen_ty_3 {
    pub zipf:  zipf_state,
    pub gauss: gauss_state,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of fio_file__bindgen_ty_3"]
        [::std::mem::size_of::<fio_file__bindgen_ty_3>() - 104usize];
    ["Alignment of fio_file__bindgen_ty_3"]
        [::std::mem::align_of::<fio_file__bindgen_ty_3>() - 8usize];
    ["Offset of field: fio_file__bindgen_ty_3::zipf"]
        [::std::mem::offset_of!(fio_file__bindgen_ty_3, zipf) - 0usize];
    ["Offset of field: fio_file__bindgen_ty_3::gauss"]
        [::std::mem::offset_of!(fio_file__bindgen_ty_3, gauss) - 0usize];
};
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of fio_file"][::std::mem::size_of::<fio_file>() - 392usize];
    ["Alignment of fio_file"][::std::mem::align_of::<fio_file>() - 8usize];
    ["Offset of field: fio_file::hash_list"]
        [::std::mem::offset_of!(fio_file, hash_list) - 0usize];
    ["Offset of field: fio_file::filetype"]
        [::std::mem::offset_of!(fio_file, filetype) - 16usize];
    ["Offset of field: fio_file::fd"]
        [::std::mem::offset_of!(fio_file, fd) - 20usize];
    ["Offset of field: fio_file::shadow_fd"]
        [::std::mem::offset_of!(fio_file, shadow_fd) - 24usize];
    ["Offset of field: fio_file::major"]
        [::std::mem::offset_of!(fio_file, major) - 28usize];
    ["Offset of field: fio_file::minor"]
        [::std::mem::offset_of!(fio_file, minor) - 32usize];
    ["Offset of field: fio_file::fileno"]
        [::std::mem::offset_of!(fio_file, fileno) - 36usize];
    ["Offset of field: fio_file::file_name"]
        [::std::mem::offset_of!(fio_file, file_name) - 40usize];
    ["Offset of field: fio_file::real_file_size"]
        [::std::mem::offset_of!(fio_file, real_file_size) - 48usize];
    ["Offset of field: fio_file::file_offset"]
        [::std::mem::offset_of!(fio_file, file_offset) - 56usize];
    ["Offset of field: fio_file::io_size"]
        [::std::mem::offset_of!(fio_file, io_size) - 64usize];
    ["Offset of field: fio_file::ruhs_info"]
        [::std::mem::offset_of!(fio_file, ruhs_info) - 72usize];
    ["Offset of field: fio_file::ruhs_scheme"]
        [::std::mem::offset_of!(fio_file, ruhs_scheme) - 80usize];
    ["Offset of field: fio_file::zbd_info"]
        [::std::mem::offset_of!(fio_file, zbd_info) - 88usize];
    ["Offset of field: fio_file::min_zone"]
        [::std::mem::offset_of!(fio_file, min_zone) - 96usize];
    ["Offset of field: fio_file::max_zone"]
        [::std::mem::offset_of!(fio_file, max_zone) - 100usize];
    ["Offset of field: fio_file::last_pos"]
        [::std::mem::offset_of!(fio_file, last_pos) - 104usize];
    ["Offset of field: fio_file::last_start"]
        [::std::mem::offset_of!(fio_file, last_start) - 128usize];
    ["Offset of field: fio_file::first_write"]
        [::std::mem::offset_of!(fio_file, first_write) - 152usize];
    ["Offset of field: fio_file::last_write"]
        [::std::mem::offset_of!(fio_file, last_write) - 160usize];
    ["Offset of field: fio_file::last_write_comp"]
        [::std::mem::offset_of!(fio_file, last_write_comp) - 168usize];
    ["Offset of field: fio_file::last_write_idx"]
        [::std::mem::offset_of!(fio_file, last_write_idx) - 176usize];
    ["Offset of field: fio_file::engine_pos"]
        [::std::mem::offset_of!(fio_file, engine_pos) - 184usize];
    ["Offset of field: fio_file::engine_data"]
        [::std::mem::offset_of!(fio_file, engine_data) - 192usize];
    ["Offset of field: fio_file::references"]
        [::std::mem::offset_of!(fio_file, references) - 376usize];
    ["Offset of field: fio_file::flags"]
        [::std::mem::offset_of!(fio_file, flags) - 380usize];
    ["Offset of field: fio_file::du"]
        [::std::mem::offset_of!(fio_file, du) - 384usize];
};
pub type os_aiocb_t = [u64; 20usize];
pub const fio_opt_type_FIO_OPT_INVALID: fio_opt_type = 0;
pub const fio_opt_type_FIO_OPT_STR: fio_opt_type = 1;
pub const fio_opt_type_FIO_OPT_STR_ULL: fio_opt_type = 2;
pub const fio_opt_type_FIO_OPT_STR_MULTI: fio_opt_type = 3;
pub const fio_opt_type_FIO_OPT_STR_VAL: fio_opt_type = 4;
pub const fio_opt_type_FIO_OPT_STR_VAL_TIME: fio_opt_type = 5;
pub const fio_opt_type_FIO_OPT_STR_STORE: fio_opt_type = 6;
pub const fio_opt_type_FIO_OPT_RANGE: fio_opt_type = 7;
pub const fio_opt_type_FIO_OPT_INT: fio_opt_type = 8;
pub const fio_opt_type_FIO_OPT_ULL: fio_opt_type = 9;
pub const fio_opt_type_FIO_OPT_BOOL: fio_opt_type = 10;
pub const fio_opt_type_FIO_OPT_FLOAT_LIST: fio_opt_type = 11;
pub const fio_opt_type_FIO_OPT_STR_SET: fio_opt_type = 12;
pub const fio_opt_type_FIO_OPT_STR_VAL_ZONE: fio_opt_type = 13;
pub const fio_opt_type_FIO_OPT_DEPRECATED: fio_opt_type = 14;
pub const fio_opt_type_FIO_OPT_SOFT_DEPRECATED: fio_opt_type = 15;
pub const fio_opt_type_FIO_OPT_UNSUPPORTED: fio_opt_type = 16;
pub type fio_opt_type = libc::c_uint;
#[repr(C)]
#[repr(align(8))]
#[derive(Debug, Copy, Clone)]
pub struct value_pair {
    pub _bindgen_opaque_blob: [u64; 5usize],
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of value_pair"][::std::mem::size_of::<value_pair>() - 40usize];
    ["Alignment of value_pair"][::std::mem::align_of::<value_pair>() - 8usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct fio_option {
    pub name:        *const libc::c_char,
    pub lname:       *const libc::c_char,
    pub alias:       *const libc::c_char,
    pub type_:       fio_opt_type,
    pub off1:        libc::c_uint,
    pub off2:        libc::c_uint,
    pub off3:        libc::c_uint,
    pub off4:        libc::c_uint,
    pub off5:        libc::c_uint,
    pub off6:        libc::c_uint,
    pub maxval:      libc::c_ulonglong,
    pub minval:      libc::c_int,
    pub maxfp:       f64,
    pub minfp:       f64,
    pub interval:    libc::c_uint,
    pub maxlen:      libc::c_uint,
    pub neg:         libc::c_int,
    pub prio:        libc::c_int,
    pub cb:          *mut libc::c_void,
    pub help:        *const libc::c_char,
    pub def:         *const libc::c_char,
    pub posval:      [value_pair; 32usize],
    pub parent:      *const libc::c_char,
    pub hide:        libc::c_int,
    pub hide_on_set: libc::c_int,
    pub inverse:     *const libc::c_char,
    pub inv_opt:     *mut fio_option,
    pub verify: ::std::option::Option<
        unsafe extern "C" fn(
            arg1: *const fio_option,
            arg2: *mut libc::c_void,
        ) -> libc::c_int,
    >,
    pub prof_name:   *const libc::c_char,
    pub prof_opts:   *mut libc::c_void,
    pub category:    u64,
    pub group:       u64,
    pub gui_data:    *mut libc::c_void,
    pub is_seconds:  libc::c_int,
    pub is_time:     libc::c_int,
    pub no_warn_def: libc::c_int,
    pub pow2:        libc::c_int,
    pub no_free:     libc::c_int,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of fio_option"][::std::mem::size_of::<fio_option>() - 1512usize];
    ["Alignment of fio_option"][::std::mem::align_of::<fio_option>() - 8usize];
    ["Offset of field: fio_option::name"]
        [::std::mem::offset_of!(fio_option, name) - 0usize];
    ["Offset of field: fio_option::lname"]
        [::std::mem::offset_of!(fio_option, lname) - 8usize];
    ["Offset of field: fio_option::alias"]
        [::std::mem::offset_of!(fio_option, alias) - 16usize];
    ["Offset of field: fio_option::type_"]
        [::std::mem::offset_of!(fio_option, type_) - 24usize];
    ["Offset of field: fio_option::off1"]
        [::std::mem::offset_of!(fio_option, off1) - 28usize];
    ["Offset of field: fio_option::off2"]
        [::std::mem::offset_of!(fio_option, off2) - 32usize];
    ["Offset of field: fio_option::off3"]
        [::std::mem::offset_of!(fio_option, off3) - 36usize];
    ["Offset of field: fio_option::off4"]
        [::std::mem::offset_of!(fio_option, off4) - 40usize];
    ["Offset of field: fio_option::off5"]
        [::std::mem::offset_of!(fio_option, off5) - 44usize];
    ["Offset of field: fio_option::off6"]
        [::std::mem::offset_of!(fio_option, off6) - 48usize];
    ["Offset of field: fio_option::maxval"]
        [::std::mem::offset_of!(fio_option, maxval) - 56usize];
    ["Offset of field: fio_option::minval"]
        [::std::mem::offset_of!(fio_option, minval) - 64usize];
    ["Offset of field: fio_option::maxfp"]
        [::std::mem::offset_of!(fio_option, maxfp) - 72usize];
    ["Offset of field: fio_option::minfp"]
        [::std::mem::offset_of!(fio_option, minfp) - 80usize];
    ["Offset of field: fio_option::interval"]
        [::std::mem::offset_of!(fio_option, interval) - 88usize];
    ["Offset of field: fio_option::maxlen"]
        [::std::mem::offset_of!(fio_option, maxlen) - 92usize];
    ["Offset of field: fio_option::neg"]
        [::std::mem::offset_of!(fio_option, neg) - 96usize];
    ["Offset of field: fio_option::prio"]
        [::std::mem::offset_of!(fio_option, prio) - 100usize];
    ["Offset of field: fio_option::cb"]
        [::std::mem::offset_of!(fio_option, cb) - 104usize];
    ["Offset of field: fio_option::help"]
        [::std::mem::offset_of!(fio_option, help) - 112usize];
    ["Offset of field: fio_option::def"]
        [::std::mem::offset_of!(fio_option, def) - 120usize];
    ["Offset of field: fio_option::posval"]
        [::std::mem::offset_of!(fio_option, posval) - 128usize];
    ["Offset of field: fio_option::parent"]
        [::std::mem::offset_of!(fio_option, parent) - 1408usize];
    ["Offset of field: fio_option::hide"]
        [::std::mem::offset_of!(fio_option, hide) - 1416usize];
    ["Offset of field: fio_option::hide_on_set"]
        [::std::mem::offset_of!(fio_option, hide_on_set) - 1420usize];
    ["Offset of field: fio_option::inverse"]
        [::std::mem::offset_of!(fio_option, inverse) - 1424usize];
    ["Offset of field: fio_option::inv_opt"]
        [::std::mem::offset_of!(fio_option, inv_opt) - 1432usize];
    ["Offset of field: fio_option::verify"]
        [::std::mem::offset_of!(fio_option, verify) - 1440usize];
    ["Offset of field: fio_option::prof_name"]
        [::std::mem::offset_of!(fio_option, prof_name) - 1448usize];
    ["Offset of field: fio_option::prof_opts"]
        [::std::mem::offset_of!(fio_option, prof_opts) - 1456usize];
    ["Offset of field: fio_option::category"]
        [::std::mem::offset_of!(fio_option, category) - 1464usize];
    ["Offset of field: fio_option::group"]
        [::std::mem::offset_of!(fio_option, group) - 1472usize];
    ["Offset of field: fio_option::gui_data"]
        [::std::mem::offset_of!(fio_option, gui_data) - 1480usize];
    ["Offset of field: fio_option::is_seconds"]
        [::std::mem::offset_of!(fio_option, is_seconds) - 1488usize];
    ["Offset of field: fio_option::is_time"]
        [::std::mem::offset_of!(fio_option, is_time) - 1492usize];
    ["Offset of field: fio_option::no_warn_def"]
        [::std::mem::offset_of!(fio_option, no_warn_def) - 1496usize];
    ["Offset of field: fio_option::pow2"]
        [::std::mem::offset_of!(fio_option, pow2) - 1500usize];
    ["Offset of field: fio_option::no_free"]
        [::std::mem::offset_of!(fio_option, no_free) - 1504usize];
};
#[repr(C)]
#[repr(align(8))]
#[derive(Debug, Copy, Clone)]
pub struct fio_rb_node {
    pub _bindgen_opaque_blob: [u64; 3usize],
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of fio_rb_node"][::std::mem::size_of::<fio_rb_node>() - 24usize];
    ["Alignment of fio_rb_node"]
        [::std::mem::align_of::<fio_rb_node>() - 8usize];
};
#[repr(C)]
#[repr(align(8))]
#[derive(Debug, Copy, Clone)]
pub struct rb_root {
    pub _bindgen_opaque_blob: u64,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of rb_root"][::std::mem::size_of::<rb_root>() - 8usize];
    ["Alignment of rb_root"][::std::mem::align_of::<rb_root>() - 8usize];
};
#[repr(C)]
#[repr(align(8))]
#[derive(Debug, Copy, Clone)]
pub struct workqueue_work {
    pub _bindgen_opaque_blob: [u64; 2usize],
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of workqueue_work"]
        [::std::mem::size_of::<workqueue_work>() - 16usize];
    ["Alignment of workqueue_work"]
        [::std::mem::align_of::<workqueue_work>() - 8usize];
};
#[repr(C)]
#[repr(align(8))]
#[derive(Debug, Copy, Clone)]
pub struct workqueue {
    pub _bindgen_opaque_blob: [u64; 18usize],
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of workqueue"][::std::mem::size_of::<workqueue>() - 144usize];
    ["Alignment of workqueue"][::std::mem::align_of::<workqueue>() - 8usize];
};
#[repr(C)]
pub struct io_u {
    pub start_time:       timespec,
    pub issue_time:       timespec,
    pub file:             *mut fio_file,
    pub flags:            libc::c_uint,
    pub ddir:             fio_ddir,
    pub acct_ddir:        fio_ddir,
    pub numberio:         libc::c_ushort,
    pub ioprio:           libc::c_ushort,
    pub clat_prio_index:  libc::c_ushort,
    pub number_trim:      libc::c_uint,
    pub buflen:           libc::c_ulonglong,
    pub offset:           libc::c_ulonglong,
    pub verify_offset:    libc::c_ulonglong,
    pub buf:              *mut libc::c_void,
    pub rand_seed:        u64,
    pub xfer_buf:         *mut libc::c_void,
    pub xfer_buflen:      libc::c_ulonglong,
    pub buf_filled_len:   libc::c_ulonglong,
    pub ipo:              *mut io_piece,
    pub resid:            libc::c_ulonglong,
    pub error:            libc::c_uint,
    pub __bindgen_anon_1: io_u__bindgen_ty_1,
    pub engine_data:      *mut libc::c_void,
    pub __bindgen_anon_2: io_u__bindgen_ty_2,
    pub zbd_queue_io: ::std::option::Option<
        unsafe extern "C" fn(
            td: *mut thread_data,
            arg1: *mut io_u,
            q: libc::c_int,
            success: bool,
        ),
    >,
    pub zbd_put_io: ::std::option::Option<
        unsafe extern "C" fn(td: *mut thread_data, arg1: *const io_u),
    >,
    pub end_io: ::std::option::Option<
        unsafe extern "C" fn(
            arg1: *mut thread_data,
            arg2: *mut *mut io_u,
        ) -> libc::c_int,
    >,
    pub dtype:            u32,
    pub dspec:            u32,
    pub __bindgen_anon_3: io_u__bindgen_ty_3,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union io_u__bindgen_ty_1 {
    pub index: libc::c_uint,
    pub seen:  libc::c_uint,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of io_u__bindgen_ty_1"]
        [::std::mem::size_of::<io_u__bindgen_ty_1>() - 4usize];
    ["Alignment of io_u__bindgen_ty_1"]
        [::std::mem::align_of::<io_u__bindgen_ty_1>() - 4usize];
    ["Offset of field: io_u__bindgen_ty_1::index"]
        [::std::mem::offset_of!(io_u__bindgen_ty_1, index) - 0usize];
    ["Offset of field: io_u__bindgen_ty_1::seen"]
        [::std::mem::offset_of!(io_u__bindgen_ty_1, seen) - 0usize];
};
#[repr(C)]
#[derive(Copy, Clone)]
pub union io_u__bindgen_ty_2 {
    pub verify_list: flist_head,
    pub work:        workqueue_work,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of io_u__bindgen_ty_2"]
        [::std::mem::size_of::<io_u__bindgen_ty_2>() - 16usize];
    ["Alignment of io_u__bindgen_ty_2"]
        [::std::mem::align_of::<io_u__bindgen_ty_2>() - 8usize];
    ["Offset of field: io_u__bindgen_ty_2::verify_list"]
        [::std::mem::offset_of!(io_u__bindgen_ty_2, verify_list) - 0usize];
    ["Offset of field: io_u__bindgen_ty_2::work"]
        [::std::mem::offset_of!(io_u__bindgen_ty_2, work) - 0usize];
};
#[repr(C)]
#[derive(Copy, Clone)]
pub union io_u__bindgen_ty_3 {
    pub aiocb:     os_aiocb_t,
    pub mmap_data: *mut libc::c_void,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of io_u__bindgen_ty_3"]
        [::std::mem::size_of::<io_u__bindgen_ty_3>() - 160usize];
    ["Alignment of io_u__bindgen_ty_3"]
        [::std::mem::align_of::<io_u__bindgen_ty_3>() - 8usize];
    ["Offset of field: io_u__bindgen_ty_3::aiocb"]
        [::std::mem::offset_of!(io_u__bindgen_ty_3, aiocb) - 0usize];
    ["Offset of field: io_u__bindgen_ty_3::mmap_data"]
        [::std::mem::offset_of!(io_u__bindgen_ty_3, mmap_data) - 0usize];
};
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of io_u"][::std::mem::size_of::<io_u>() - 368usize];
    ["Alignment of io_u"][::std::mem::align_of::<io_u>() - 8usize];
    ["Offset of field: io_u::start_time"]
        [::std::mem::offset_of!(io_u, start_time) - 0usize];
    ["Offset of field: io_u::issue_time"]
        [::std::mem::offset_of!(io_u, issue_time) - 16usize];
    ["Offset of field: io_u::file"]
        [::std::mem::offset_of!(io_u, file) - 32usize];
    ["Offset of field: io_u::flags"]
        [::std::mem::offset_of!(io_u, flags) - 40usize];
    ["Offset of field: io_u::ddir"]
        [::std::mem::offset_of!(io_u, ddir) - 44usize];
    ["Offset of field: io_u::acct_ddir"]
        [::std::mem::offset_of!(io_u, acct_ddir) - 48usize];
    ["Offset of field: io_u::numberio"]
        [::std::mem::offset_of!(io_u, numberio) - 52usize];
    ["Offset of field: io_u::ioprio"]
        [::std::mem::offset_of!(io_u, ioprio) - 54usize];
    ["Offset of field: io_u::clat_prio_index"]
        [::std::mem::offset_of!(io_u, clat_prio_index) - 56usize];
    ["Offset of field: io_u::number_trim"]
        [::std::mem::offset_of!(io_u, number_trim) - 60usize];
    ["Offset of field: io_u::buflen"]
        [::std::mem::offset_of!(io_u, buflen) - 64usize];
    ["Offset of field: io_u::offset"]
        [::std::mem::offset_of!(io_u, offset) - 72usize];
    ["Offset of field: io_u::verify_offset"]
        [::std::mem::offset_of!(io_u, verify_offset) - 80usize];
    ["Offset of field: io_u::buf"][::std::mem::offset_of!(io_u, buf) - 88usize];
    ["Offset of field: io_u::rand_seed"]
        [::std::mem::offset_of!(io_u, rand_seed) - 96usize];
    ["Offset of field: io_u::xfer_buf"]
        [::std::mem::offset_of!(io_u, xfer_buf) - 104usize];
    ["Offset of field: io_u::xfer_buflen"]
        [::std::mem::offset_of!(io_u, xfer_buflen) - 112usize];
    ["Offset of field: io_u::buf_filled_len"]
        [::std::mem::offset_of!(io_u, buf_filled_len) - 120usize];
    ["Offset of field: io_u::ipo"]
        [::std::mem::offset_of!(io_u, ipo) - 128usize];
    ["Offset of field: io_u::resid"]
        [::std::mem::offset_of!(io_u, resid) - 136usize];
    ["Offset of field: io_u::error"]
        [::std::mem::offset_of!(io_u, error) - 144usize];
    ["Offset of field: io_u::engine_data"]
        [::std::mem::offset_of!(io_u, engine_data) - 152usize];
    ["Offset of field: io_u::zbd_queue_io"]
        [::std::mem::offset_of!(io_u, zbd_queue_io) - 176usize];
    ["Offset of field: io_u::zbd_put_io"]
        [::std::mem::offset_of!(io_u, zbd_put_io) - 184usize];
    ["Offset of field: io_u::end_io"]
        [::std::mem::offset_of!(io_u, end_io) - 192usize];
    ["Offset of field: io_u::dtype"]
        [::std::mem::offset_of!(io_u, dtype) - 200usize];
    ["Offset of field: io_u::dspec"]
        [::std::mem::offset_of!(io_u, dspec) - 204usize];
};
pub const zbd_zoned_model_ZBD_NONE: zbd_zoned_model = 1;
pub const zbd_zoned_model_ZBD_HOST_AWARE: zbd_zoned_model = 2;
pub const zbd_zoned_model_ZBD_HOST_MANAGED: zbd_zoned_model = 3;
pub type zbd_zoned_model = libc::c_uint;
pub const zbd_zone_type_ZBD_ZONE_TYPE_CNV: zbd_zone_type = 1;
pub const zbd_zone_type_ZBD_ZONE_TYPE_SWR: zbd_zone_type = 2;
pub const zbd_zone_type_ZBD_ZONE_TYPE_SWP: zbd_zone_type = 3;
pub type zbd_zone_type = libc::c_uint;
pub const zbd_zone_cond_ZBD_ZONE_COND_NOT_WP: zbd_zone_cond = 0;
pub const zbd_zone_cond_ZBD_ZONE_COND_EMPTY: zbd_zone_cond = 1;
pub const zbd_zone_cond_ZBD_ZONE_COND_IMP_OPEN: zbd_zone_cond = 2;
pub const zbd_zone_cond_ZBD_ZONE_COND_EXP_OPEN: zbd_zone_cond = 3;
pub const zbd_zone_cond_ZBD_ZONE_COND_CLOSED: zbd_zone_cond = 4;
pub const zbd_zone_cond_ZBD_ZONE_COND_READONLY: zbd_zone_cond = 13;
pub const zbd_zone_cond_ZBD_ZONE_COND_FULL: zbd_zone_cond = 14;
pub const zbd_zone_cond_ZBD_ZONE_COND_OFFLINE: zbd_zone_cond = 15;
pub type zbd_zone_cond = libc::c_uint;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct zbd_zone {
    pub start:    u64,
    pub wp:       u64,
    pub len:      u64,
    pub capacity: u64,
    pub type_:    zbd_zone_type,
    pub cond:     zbd_zone_cond,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of zbd_zone"][::std::mem::size_of::<zbd_zone>() - 40usize];
    ["Alignment of zbd_zone"][::std::mem::align_of::<zbd_zone>() - 8usize];
    ["Offset of field: zbd_zone::start"]
        [::std::mem::offset_of!(zbd_zone, start) - 0usize];
    ["Offset of field: zbd_zone::wp"]
        [::std::mem::offset_of!(zbd_zone, wp) - 8usize];
    ["Offset of field: zbd_zone::len"]
        [::std::mem::offset_of!(zbd_zone, len) - 16usize];
    ["Offset of field: zbd_zone::capacity"]
        [::std::mem::offset_of!(zbd_zone, capacity) - 24usize];
    ["Offset of field: zbd_zone::type_"]
        [::std::mem::offset_of!(zbd_zone, type_) - 32usize];
    ["Offset of field: zbd_zone::cond"]
        [::std::mem::offset_of!(zbd_zone, cond) - 36usize];
};
#[repr(C)]
#[derive(Debug)]
pub struct fio_ruhs_info {
    pub nr_ruhs: u32,
    pub pli_loc: u32,
    pub plis:    __IncompleteArrayField<u16>,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of fio_ruhs_info"][::std::mem::size_of::<fio_ruhs_info>() - 8usize];
    ["Alignment of fio_ruhs_info"]
        [::std::mem::align_of::<fio_ruhs_info>() - 4usize];
    ["Offset of field: fio_ruhs_info::nr_ruhs"]
        [::std::mem::offset_of!(fio_ruhs_info, nr_ruhs) - 0usize];
    ["Offset of field: fio_ruhs_info::pli_loc"]
        [::std::mem::offset_of!(fio_ruhs_info, pli_loc) - 4usize];
    ["Offset of field: fio_ruhs_info::plis"]
        [::std::mem::offset_of!(fio_ruhs_info, plis) - 8usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct fio_ruhs_scheme_entry {
    pub start_offset: libc::c_ulonglong,
    pub end_offset:   libc::c_ulonglong,
    pub pli:          u16,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of fio_ruhs_scheme_entry"]
        [::std::mem::size_of::<fio_ruhs_scheme_entry>() - 24usize];
    ["Alignment of fio_ruhs_scheme_entry"]
        [::std::mem::align_of::<fio_ruhs_scheme_entry>() - 8usize];
    ["Offset of field: fio_ruhs_scheme_entry::start_offset"]
        [::std::mem::offset_of!(fio_ruhs_scheme_entry, start_offset) - 0usize];
    ["Offset of field: fio_ruhs_scheme_entry::end_offset"]
        [::std::mem::offset_of!(fio_ruhs_scheme_entry, end_offset) - 8usize];
    ["Offset of field: fio_ruhs_scheme_entry::pli"]
        [::std::mem::offset_of!(fio_ruhs_scheme_entry, pli) - 16usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct fio_ruhs_scheme {
    pub nr_schemes:     u16,
    pub scheme_entries: [fio_ruhs_scheme_entry; 32usize],
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of fio_ruhs_scheme"]
        [::std::mem::size_of::<fio_ruhs_scheme>() - 776usize];
    ["Alignment of fio_ruhs_scheme"]
        [::std::mem::align_of::<fio_ruhs_scheme>() - 8usize];
    ["Offset of field: fio_ruhs_scheme::nr_schemes"]
        [::std::mem::offset_of!(fio_ruhs_scheme, nr_schemes) - 0usize];
    ["Offset of field: fio_ruhs_scheme::scheme_entries"]
        [::std::mem::offset_of!(fio_ruhs_scheme, scheme_entries) - 8usize];
};
pub const fio_q_status_FIO_Q_COMPLETED: fio_q_status = 0;
pub const fio_q_status_FIO_Q_QUEUED: fio_q_status = 1;
pub const fio_q_status_FIO_Q_BUSY: fio_q_status = 2;
pub type fio_q_status = libc::c_uint;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ioengine_ops {
    pub list:                 flist_head,
    pub name:                 *const libc::c_char,
    pub version:              libc::c_int,
    pub flags:                libc::c_int,
    pub dlhandle:             *mut libc::c_void,
    pub setup: ::std::option::Option<
        unsafe extern "C" fn(arg1: *mut thread_data) -> libc::c_int,
    >,
    pub init: ::std::option::Option<
        unsafe extern "C" fn(arg1: *mut thread_data) -> libc::c_int,
    >,
    pub post_init: ::std::option::Option<
        unsafe extern "C" fn(arg1: *mut thread_data) -> libc::c_int,
    >,
    pub prep: ::std::option::Option<
        unsafe extern "C" fn(
            arg1: *mut thread_data,
            arg2: *mut io_u,
        ) -> libc::c_int,
    >,
    pub queue: ::std::option::Option<
        unsafe extern "C" fn(
            arg1: *mut thread_data,
            arg2: *mut io_u,
        ) -> fio_q_status,
    >,
    pub commit: ::std::option::Option<
        unsafe extern "C" fn(arg1: *mut thread_data) -> libc::c_int,
    >,
    pub getevents: ::std::option::Option<
        unsafe extern "C" fn(
            arg1: *mut thread_data,
            arg2: libc::c_uint,
            arg3: libc::c_uint,
            arg4: *const timespec,
        ) -> libc::c_int,
    >,
    pub event: ::std::option::Option<
        unsafe extern "C" fn(
            arg1: *mut thread_data,
            arg2: libc::c_int,
        ) -> *mut io_u,
    >,
    pub errdetails: ::std::option::Option<
        unsafe extern "C" fn(
            arg1: *mut thread_data,
            arg2: *mut io_u,
        ) -> *mut libc::c_char,
    >,
    pub cancel: ::std::option::Option<
        unsafe extern "C" fn(
            arg1: *mut thread_data,
            arg2: *mut io_u,
        ) -> libc::c_int,
    >,
    pub cleanup:
        ::std::option::Option<unsafe extern "C" fn(arg1: *mut thread_data)>,
    pub open_file: ::std::option::Option<
        unsafe extern "C" fn(
            arg1: *mut thread_data,
            arg2: *mut fio_file,
        ) -> libc::c_int,
    >,
    pub close_file: ::std::option::Option<
        unsafe extern "C" fn(
            arg1: *mut thread_data,
            arg2: *mut fio_file,
        ) -> libc::c_int,
    >,
    pub invalidate: ::std::option::Option<
        unsafe extern "C" fn(
            arg1: *mut thread_data,
            arg2: *mut fio_file,
        ) -> libc::c_int,
    >,
    pub unlink_file: ::std::option::Option<
        unsafe extern "C" fn(
            arg1: *mut thread_data,
            arg2: *mut fio_file,
        ) -> libc::c_int,
    >,
    pub get_file_size: ::std::option::Option<
        unsafe extern "C" fn(
            arg1: *mut thread_data,
            arg2: *mut fio_file,
        ) -> libc::c_int,
    >,
    pub prepopulate_file: ::std::option::Option<
        unsafe extern "C" fn(
            arg1: *mut thread_data,
            arg2: *mut fio_file,
        ) -> libc::c_int,
    >,
    pub terminate:
        ::std::option::Option<unsafe extern "C" fn(arg1: *mut thread_data)>,
    pub iomem_alloc: ::std::option::Option<
        unsafe extern "C" fn(
            arg1: *mut thread_data,
            arg2: usize,
        ) -> libc::c_int,
    >,
    pub iomem_free:
        ::std::option::Option<unsafe extern "C" fn(arg1: *mut thread_data)>,
    pub io_u_init: ::std::option::Option<
        unsafe extern "C" fn(
            arg1: *mut thread_data,
            arg2: *mut io_u,
        ) -> libc::c_int,
    >,
    pub io_u_free: ::std::option::Option<
        unsafe extern "C" fn(arg1: *mut thread_data, arg2: *mut io_u),
    >,
    pub get_zoned_model: ::std::option::Option<
        unsafe extern "C" fn(
            td: *mut thread_data,
            f: *mut fio_file,
            arg1: *mut zbd_zoned_model,
        ) -> libc::c_int,
    >,
    pub report_zones: ::std::option::Option<
        unsafe extern "C" fn(
            arg1: *mut thread_data,
            arg2: *mut fio_file,
            arg3: u64,
            arg4: *mut zbd_zone,
            arg5: libc::c_uint,
        ) -> libc::c_int,
    >,
    pub reset_wp: ::std::option::Option<
        unsafe extern "C" fn(
            arg1: *mut thread_data,
            arg2: *mut fio_file,
            arg3: u64,
            arg4: u64,
        ) -> libc::c_int,
    >,
    pub get_max_open_zones: ::std::option::Option<
        unsafe extern "C" fn(
            arg1: *mut thread_data,
            arg2: *mut fio_file,
            arg3: *mut libc::c_uint,
        ) -> libc::c_int,
    >,
    pub get_max_active_zones: ::std::option::Option<
        unsafe extern "C" fn(
            arg1: *mut thread_data,
            arg2: *mut fio_file,
            arg3: *mut libc::c_uint,
        ) -> libc::c_int,
    >,
    pub finish_zone: ::std::option::Option<
        unsafe extern "C" fn(
            arg1: *mut thread_data,
            arg2: *mut fio_file,
            arg3: u64,
            arg4: u64,
        ) -> libc::c_int,
    >,
    pub fdp_fetch_ruhs: ::std::option::Option<
        unsafe extern "C" fn(
            arg1: *mut thread_data,
            arg2: *mut fio_file,
            arg3: *mut fio_ruhs_info,
        ) -> libc::c_int,
    >,
    pub option_struct_size:   libc::c_int,
    pub options:              *mut fio_option,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of ioengine_ops"][::std::mem::size_of::<ioengine_ops>() - 288usize];
    ["Alignment of ioengine_ops"]
        [::std::mem::align_of::<ioengine_ops>() - 8usize];
    ["Offset of field: ioengine_ops::list"]
        [::std::mem::offset_of!(ioengine_ops, list) - 0usize];
    ["Offset of field: ioengine_ops::name"]
        [::std::mem::offset_of!(ioengine_ops, name) - 16usize];
    ["Offset of field: ioengine_ops::version"]
        [::std::mem::offset_of!(ioengine_ops, version) - 24usize];
    ["Offset of field: ioengine_ops::flags"]
        [::std::mem::offset_of!(ioengine_ops, flags) - 28usize];
    ["Offset of field: ioengine_ops::dlhandle"]
        [::std::mem::offset_of!(ioengine_ops, dlhandle) - 32usize];
    ["Offset of field: ioengine_ops::setup"]
        [::std::mem::offset_of!(ioengine_ops, setup) - 40usize];
    ["Offset of field: ioengine_ops::init"]
        [::std::mem::offset_of!(ioengine_ops, init) - 48usize];
    ["Offset of field: ioengine_ops::post_init"]
        [::std::mem::offset_of!(ioengine_ops, post_init) - 56usize];
    ["Offset of field: ioengine_ops::prep"]
        [::std::mem::offset_of!(ioengine_ops, prep) - 64usize];
    ["Offset of field: ioengine_ops::queue"]
        [::std::mem::offset_of!(ioengine_ops, queue) - 72usize];
    ["Offset of field: ioengine_ops::commit"]
        [::std::mem::offset_of!(ioengine_ops, commit) - 80usize];
    ["Offset of field: ioengine_ops::getevents"]
        [::std::mem::offset_of!(ioengine_ops, getevents) - 88usize];
    ["Offset of field: ioengine_ops::event"]
        [::std::mem::offset_of!(ioengine_ops, event) - 96usize];
    ["Offset of field: ioengine_ops::errdetails"]
        [::std::mem::offset_of!(ioengine_ops, errdetails) - 104usize];
    ["Offset of field: ioengine_ops::cancel"]
        [::std::mem::offset_of!(ioengine_ops, cancel) - 112usize];
    ["Offset of field: ioengine_ops::cleanup"]
        [::std::mem::offset_of!(ioengine_ops, cleanup) - 120usize];
    ["Offset of field: ioengine_ops::open_file"]
        [::std::mem::offset_of!(ioengine_ops, open_file) - 128usize];
    ["Offset of field: ioengine_ops::close_file"]
        [::std::mem::offset_of!(ioengine_ops, close_file) - 136usize];
    ["Offset of field: ioengine_ops::invalidate"]
        [::std::mem::offset_of!(ioengine_ops, invalidate) - 144usize];
    ["Offset of field: ioengine_ops::unlink_file"]
        [::std::mem::offset_of!(ioengine_ops, unlink_file) - 152usize];
    ["Offset of field: ioengine_ops::get_file_size"]
        [::std::mem::offset_of!(ioengine_ops, get_file_size) - 160usize];
    ["Offset of field: ioengine_ops::prepopulate_file"]
        [::std::mem::offset_of!(ioengine_ops, prepopulate_file) - 168usize];
    ["Offset of field: ioengine_ops::terminate"]
        [::std::mem::offset_of!(ioengine_ops, terminate) - 176usize];
    ["Offset of field: ioengine_ops::iomem_alloc"]
        [::std::mem::offset_of!(ioengine_ops, iomem_alloc) - 184usize];
    ["Offset of field: ioengine_ops::iomem_free"]
        [::std::mem::offset_of!(ioengine_ops, iomem_free) - 192usize];
    ["Offset of field: ioengine_ops::io_u_init"]
        [::std::mem::offset_of!(ioengine_ops, io_u_init) - 200usize];
    ["Offset of field: ioengine_ops::io_u_free"]
        [::std::mem::offset_of!(ioengine_ops, io_u_free) - 208usize];
    ["Offset of field: ioengine_ops::get_zoned_model"]
        [::std::mem::offset_of!(ioengine_ops, get_zoned_model) - 216usize];
    ["Offset of field: ioengine_ops::report_zones"]
        [::std::mem::offset_of!(ioengine_ops, report_zones) - 224usize];
    ["Offset of field: ioengine_ops::reset_wp"]
        [::std::mem::offset_of!(ioengine_ops, reset_wp) - 232usize];
    ["Offset of field: ioengine_ops::get_max_open_zones"]
        [::std::mem::offset_of!(ioengine_ops, get_max_open_zones) - 240usize];
    ["Offset of field: ioengine_ops::get_max_active_zones"]
        [::std::mem::offset_of!(ioengine_ops, get_max_active_zones) - 248usize];
    ["Offset of field: ioengine_ops::finish_zone"]
        [::std::mem::offset_of!(ioengine_ops, finish_zone) - 256usize];
    ["Offset of field: ioengine_ops::fdp_fetch_ruhs"]
        [::std::mem::offset_of!(ioengine_ops, fdp_fetch_ruhs) - 264usize];
    ["Offset of field: ioengine_ops::option_struct_size"]
        [::std::mem::offset_of!(ioengine_ops, option_struct_size) - 272usize];
    ["Offset of field: ioengine_ops::options"]
        [::std::mem::offset_of!(ioengine_ops, options) - 280usize];
};
pub const fio_ioengine_flags_FIO_SYNCIO: fio_ioengine_flags = 1;
pub const fio_ioengine_flags_FIO_RAWIO: fio_ioengine_flags = 2;
pub const fio_ioengine_flags_FIO_DISKLESSIO: fio_ioengine_flags = 4;
pub const fio_ioengine_flags_FIO_NOEXTEND: fio_ioengine_flags = 8;
pub const fio_ioengine_flags_FIO_NODISKUTIL: fio_ioengine_flags = 16;
pub const fio_ioengine_flags_FIO_UNIDIR: fio_ioengine_flags = 32;
pub const fio_ioengine_flags_FIO_NOIO: fio_ioengine_flags = 64;
pub const fio_ioengine_flags_FIO_PIPEIO: fio_ioengine_flags = 128;
pub const fio_ioengine_flags_FIO_BARRIER: fio_ioengine_flags = 256;
pub const fio_ioengine_flags_FIO_MEMALIGN: fio_ioengine_flags = 512;
pub const fio_ioengine_flags_FIO_BIT_BASED: fio_ioengine_flags = 1024;
pub const fio_ioengine_flags_FIO_FAKEIO: fio_ioengine_flags = 2048;
pub const fio_ioengine_flags_FIO_NOSTATS: fio_ioengine_flags = 4096;
pub const fio_ioengine_flags_FIO_NOFILEHASH: fio_ioengine_flags = 8192;
pub const fio_ioengine_flags_FIO_ASYNCIO_SYNC_TRIM: fio_ioengine_flags = 16384;
pub const fio_ioengine_flags_FIO_NO_OFFLOAD: fio_ioengine_flags = 32768;
pub const fio_ioengine_flags_FIO_ASYNCIO_SETS_ISSUE_TIME: fio_ioengine_flags =
    65536;
pub const fio_ioengine_flags_FIO_SKIPPABLE_IOMEM_ALLOC: fio_ioengine_flags =
    131072;
pub const fio_ioengine_flags_FIO_RO_NEEDS_RW_OPEN: fio_ioengine_flags = 262144;
pub const fio_ioengine_flags_FIO_MULTI_RANGE_TRIM: fio_ioengine_flags = 524288;
pub const fio_ioengine_flags_FIO_ATOMICWRITES: fio_ioengine_flags = 1048576;
pub type fio_ioengine_flags = libc::c_uint;
#[repr(C)]
#[repr(align(8))]
pub struct io_log {
    pub _bindgen_opaque_blob: [u64; 64usize],
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of io_log"][::std::mem::size_of::<io_log>() - 512usize];
    ["Alignment of io_log"][::std::mem::align_of::<io_log>() - 8usize];
};
#[repr(C)]
#[repr(align(8))]
#[derive(Debug, Copy, Clone)]
pub struct io_piece {
    pub _bindgen_opaque_blob: [u64; 12usize],
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union io_piece__bindgen_ty_1 {
    pub rb_node: fio_rb_node,
    pub list:    flist_head,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of io_piece__bindgen_ty_1"]
        [::std::mem::size_of::<io_piece__bindgen_ty_1>() - 24usize];
    ["Alignment of io_piece__bindgen_ty_1"]
        [::std::mem::align_of::<io_piece__bindgen_ty_1>() - 8usize];
    ["Offset of field: io_piece__bindgen_ty_1::rb_node"]
        [::std::mem::offset_of!(io_piece__bindgen_ty_1, rb_node) - 0usize];
    ["Offset of field: io_piece__bindgen_ty_1::list"]
        [::std::mem::offset_of!(io_piece__bindgen_ty_1, list) - 0usize];
};
#[repr(C)]
#[derive(Copy, Clone)]
pub union io_piece__bindgen_ty_2 {
    pub fileno: libc::c_int,
    pub file:   *mut fio_file,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of io_piece__bindgen_ty_2"]
        [::std::mem::size_of::<io_piece__bindgen_ty_2>() - 8usize];
    ["Alignment of io_piece__bindgen_ty_2"]
        [::std::mem::align_of::<io_piece__bindgen_ty_2>() - 8usize];
    ["Offset of field: io_piece__bindgen_ty_2::fileno"]
        [::std::mem::offset_of!(io_piece__bindgen_ty_2, fileno) - 0usize];
    ["Offset of field: io_piece__bindgen_ty_2::file"]
        [::std::mem::offset_of!(io_piece__bindgen_ty_2, file) - 0usize];
};
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of io_piece"][::std::mem::size_of::<io_piece>() - 96usize];
    ["Alignment of io_piece"][::std::mem::align_of::<io_piece>() - 8usize];
};
#[repr(C)]
#[repr(align(8))]
#[derive(Debug, Copy, Clone)]
pub struct fio_sem {
    pub _bindgen_opaque_blob: [u64; 4usize],
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of fio_sem"][::std::mem::size_of::<fio_sem>() - 32usize];
    ["Alignment of fio_sem"][::std::mem::align_of::<fio_sem>() - 8usize];
};
#[repr(C)]
#[repr(align(8))]
pub struct disk_util {
    pub _bindgen_opaque_blob: [u64; 191usize],
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of disk_util"][::std::mem::size_of::<disk_util>() - 1528usize];
    ["Alignment of disk_util"][::std::mem::align_of::<disk_util>() - 8usize];
};
#[repr(C)]
#[repr(align(8))]
pub struct clat_prio_stat {
    pub _bindgen_opaque_blob: [u64; 1864usize],
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of clat_prio_stat"]
        [::std::mem::size_of::<clat_prio_stat>() - 14912usize];
    ["Alignment of clat_prio_stat"]
        [::std::mem::align_of::<clat_prio_stat>() - 8usize];
};
#[repr(C)]
#[repr(align(8))]
pub struct thread_stat {
    pub _bindgen_opaque_blob: [u64; 22987usize],
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union thread_stat__bindgen_ty_1 {
    pub continue_on_error: u16,
    pub pad2:              u32,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of thread_stat__bindgen_ty_1"]
        [::std::mem::size_of::<thread_stat__bindgen_ty_1>() - 4usize];
    ["Alignment of thread_stat__bindgen_ty_1"]
        [::std::mem::align_of::<thread_stat__bindgen_ty_1>() - 4usize];
    ["Offset of field: thread_stat__bindgen_ty_1::continue_on_error"][::std::mem::offset_of!(
        thread_stat__bindgen_ty_1,
        continue_on_error
    ) -
        0usize];
    ["Offset of field: thread_stat__bindgen_ty_1::pad2"]
        [::std::mem::offset_of!(thread_stat__bindgen_ty_1, pad2) - 0usize];
};
#[repr(C)]
#[derive(Copy, Clone)]
pub union thread_stat__bindgen_ty_2 {
    pub ss_iops_data:        *mut u64,
    pub ss_iops_data_offset: u64,
    pub pad4:                u64,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of thread_stat__bindgen_ty_2"]
        [::std::mem::size_of::<thread_stat__bindgen_ty_2>() - 8usize];
    ["Alignment of thread_stat__bindgen_ty_2"]
        [::std::mem::align_of::<thread_stat__bindgen_ty_2>() - 8usize];
    ["Offset of field: thread_stat__bindgen_ty_2::ss_iops_data"][::std::mem::offset_of!(
        thread_stat__bindgen_ty_2,
        ss_iops_data
    ) - 0usize];
    ["Offset of field: thread_stat__bindgen_ty_2::ss_iops_data_offset"][::std::mem::offset_of!(
        thread_stat__bindgen_ty_2,
        ss_iops_data_offset
    ) -
        0usize];
    ["Offset of field: thread_stat__bindgen_ty_2::pad4"]
        [::std::mem::offset_of!(thread_stat__bindgen_ty_2, pad4) - 0usize];
};
#[repr(C)]
#[derive(Copy, Clone)]
pub union thread_stat__bindgen_ty_3 {
    pub ss_bw_data:        *mut u64,
    pub ss_bw_data_offset: u64,
    pub pad5:              u64,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of thread_stat__bindgen_ty_3"]
        [::std::mem::size_of::<thread_stat__bindgen_ty_3>() - 8usize];
    ["Alignment of thread_stat__bindgen_ty_3"]
        [::std::mem::align_of::<thread_stat__bindgen_ty_3>() - 8usize];
    ["Offset of field: thread_stat__bindgen_ty_3::ss_bw_data"][::std::mem::offset_of!(
        thread_stat__bindgen_ty_3,
        ss_bw_data
    ) - 0usize];
    ["Offset of field: thread_stat__bindgen_ty_3::ss_bw_data_offset"][::std::mem::offset_of!(
        thread_stat__bindgen_ty_3,
        ss_bw_data_offset
    ) -
        0usize];
    ["Offset of field: thread_stat__bindgen_ty_3::pad5"]
        [::std::mem::offset_of!(thread_stat__bindgen_ty_3, pad5) - 0usize];
};
#[repr(C)]
#[derive(Copy, Clone)]
pub union thread_stat__bindgen_ty_4 {
    pub clat_prio:        [*mut clat_prio_stat; 3usize],
    pub clat_prio_offset: [u64; 3usize],
    pub pad6:             u64,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of thread_stat__bindgen_ty_4"]
        [::std::mem::size_of::<thread_stat__bindgen_ty_4>() - 24usize];
    ["Alignment of thread_stat__bindgen_ty_4"]
        [::std::mem::align_of::<thread_stat__bindgen_ty_4>() - 8usize];
    ["Offset of field: thread_stat__bindgen_ty_4::clat_prio"]
        [::std::mem::offset_of!(thread_stat__bindgen_ty_4, clat_prio) - 0usize];
    ["Offset of field: thread_stat__bindgen_ty_4::clat_prio_offset"][::std::mem::offset_of!(
        thread_stat__bindgen_ty_4,
        clat_prio_offset
    ) -
        0usize];
    ["Offset of field: thread_stat__bindgen_ty_4::pad6"]
        [::std::mem::offset_of!(thread_stat__bindgen_ty_4, pad6) - 0usize];
};
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of thread_stat"][::std::mem::size_of::<thread_stat>() - 183896usize];
    ["Alignment of thread_stat"]
        [::std::mem::align_of::<thread_stat>() - 8usize];
};
#[repr(C)]
#[repr(align(8))]
pub struct thread_options {
    pub _bindgen_opaque_blob: [u64; 437usize],
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of thread_options"]
        [::std::mem::size_of::<thread_options>() - 3496usize];
    ["Alignment of thread_options"]
        [::std::mem::align_of::<thread_options>() - 8usize];
};
#[repr(C)]
#[repr(align(8))]
#[derive(Debug, Copy, Clone)]
pub struct prof_io_ops {
    pub _bindgen_opaque_blob: [u64; 3usize],
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of prof_io_ops"][::std::mem::size_of::<prof_io_ops>() - 24usize];
    ["Alignment of prof_io_ops"]
        [::std::mem::align_of::<prof_io_ops>() - 8usize];
};
#[repr(C)]
#[repr(align(8))]
#[derive(Debug, Copy, Clone)]
pub struct io_u_queue {
    pub _bindgen_opaque_blob: [u64; 2usize],
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of io_u_queue"][::std::mem::size_of::<io_u_queue>() - 16usize];
    ["Alignment of io_u_queue"][::std::mem::align_of::<io_u_queue>() - 8usize];
};
#[repr(C)]
#[repr(align(8))]
#[derive(Debug, Copy, Clone)]
pub struct io_u_ring {
    pub _bindgen_opaque_blob: [u64; 3usize],
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of io_u_ring"][::std::mem::size_of::<io_u_ring>() - 24usize];
    ["Alignment of io_u_ring"][::std::mem::align_of::<io_u_ring>() - 8usize];
};
#[repr(C)]
#[repr(align(8))]
#[derive(Debug, Copy, Clone)]
pub struct steadystate_data {
    pub _bindgen_opaque_blob: [u64; 19usize],
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of steadystate_data"]
        [::std::mem::size_of::<steadystate_data>() - 152usize];
    ["Alignment of steadystate_data"]
        [::std::mem::align_of::<steadystate_data>() - 8usize];
};
#[repr(C)]
#[repr(align(8))]
#[derive(Debug, Copy, Clone)]
pub struct zone_split_index {
    pub _bindgen_opaque_blob: [u64; 3usize],
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of zone_split_index"]
        [::std::mem::size_of::<zone_split_index>() - 24usize];
    ["Alignment of zone_split_index"]
        [::std::mem::align_of::<zone_split_index>() - 8usize];
};
#[repr(C)]
pub struct thread_data {
    pub opt_list: flist_head,
    pub flags: libc::c_ulonglong,
    pub o: thread_options,
    pub eo: *mut libc::c_void,
    pub thread: pthread_t,
    pub thread_number: libc::c_uint,
    pub subjob_number: libc::c_uint,
    pub groupid: libc::c_uint,
    pub ts: thread_stat,
    pub client_type: libc::c_int,
    pub slat_log: *mut io_log,
    pub clat_log: *mut io_log,
    pub clat_hist_log: *mut io_log,
    pub lat_log: *mut io_log,
    pub bw_log: *mut io_log,
    pub iops_log: *mut io_log,
    pub log_compress_wq: workqueue,
    pub parent: *mut thread_data,
    pub stat_io_bytes: [u64; 3usize],
    pub bw_sample_time: timespec,
    pub stat_io_blocks: [u64; 3usize],
    pub iops_sample_time: timespec,
    pub update_rusage: libc::c_int,
    pub rusage_sem: *mut fio_sem,
    pub ru_start: rusage,
    pub ru_end: rusage,
    pub files: *mut *mut fio_file,
    pub file_locks: *mut libc::c_uchar,
    pub files_size: libc::c_uint,
    pub files_index: libc::c_uint,
    pub nr_open_files: libc::c_uint,
    pub nr_done_files: libc::c_uint,
    pub __bindgen_anon_1: thread_data__bindgen_ty_1,
    pub __bindgen_anon_2: thread_data__bindgen_ty_2,
    pub __bindgen_anon_3: thread_data__bindgen_ty_3,
    pub random_center: f64,
    pub error: libc::c_int,
    pub sig: libc::c_int,
    pub done: libc::c_int,
    pub stop_io: libc::c_int,
    pub pid: pid_t,
    pub orig_buffer: *mut libc::c_char,
    pub orig_buffer_size: usize,
    pub runstate: libc::c_int,
    pub terminate: bool,
    pub last_ddir_completed: fio_ddir,
    pub last_ddir_issued: fio_ddir,
    pub mmapfd: libc::c_int,
    pub iolog_buf: *mut libc::c_void,
    pub iolog_f: *mut FILE,
    pub rand_seeds: [u64; 22usize],
    pub bsrange_state: [frand_state; 3usize],
    pub verify_state: frand_state,
    pub verify_state_last_do_io: frand_state,
    pub trim_state: frand_state,
    pub delay_state: frand_state,
    pub fdp_state: frand_state,
    pub buf_state: frand_state,
    pub buf_state_prev: frand_state,
    pub buf_state_ret: frand_state,
    pub dedupe_state: frand_state,
    pub zone_state: frand_state,
    pub prio_state: frand_state,
    pub dedupe_working_set_index_state: frand_state,
    pub dedupe_working_set_states: *mut frand_state,
    pub num_unique_pages: libc::c_ulonglong,
    pub zone_state_index: *mut *mut zone_split_index,
    pub num_write_zones: libc::c_uint,
    pub verify_batch: libc::c_uint,
    pub trim_batch: libc::c_uint,
    pub vstate: *mut thread_io_list,
    pub shm_id: libc::c_int,
    pub ioprio: libc::c_uint,
    pub io_ops: *mut ioengine_ops,
    pub io_ops_init: libc::c_int,
    pub io_ops_data: *mut libc::c_void,
    pub cur_depth: libc::c_uint,
    pub io_u_queued: libc::c_uint,
    pub io_u_in_flight: libc::c_uint,
    pub io_u_requeues: io_u_ring,
    pub io_u_freelist: io_u_queue,
    pub io_u_all: io_u_queue,
    pub io_u_lock: pthread_mutex_t,
    pub free_cond: pthread_cond_t,
    pub verify_list: flist_head,
    pub verify_threads: *mut pthread_t,
    pub nr_verify_threads: libc::c_uint,
    pub verify_cond: pthread_cond_t,
    pub verify_thread_exit: libc::c_int,
    pub rate_bps: [u64; 3usize],
    pub rate_next_io_time: [u64; 3usize],
    pub last_rate_check_bytes: [libc::c_ulonglong; 3usize],
    pub last_rate_check_blocks: [libc::c_ulong; 3usize],
    pub rate_io_issue_bytes: [libc::c_ulonglong; 3usize],
    pub last_rate_check_time: [timespec; 3usize],
    pub last_usec: [i64; 3usize],
    pub poisson_state: [frand_state; 3usize],
    pub io_wq: workqueue,
    pub total_io_size: u64,
    pub fill_device_size: u64,
    pub io_issues: [u64; 3usize],
    pub verify_read_issues: u64,
    pub io_issue_bytes: [u64; 3usize],
    pub loops: u64,
    pub io_blocks: [u64; 3usize],
    pub this_io_blocks: [u64; 3usize],
    pub io_bytes: [u64; 3usize],
    pub this_io_bytes: [u64; 3usize],
    pub io_skip_bytes: u64,
    pub zone_bytes: u64,
    pub sem: *mut fio_sem,
    pub bytes_done: [u64; 3usize],
    pub bytes_verified: u64,
    pub thinktime_blocks_counter: *mut u64,
    pub last_thinktime: timespec,
    pub last_thinktime_blocks: i64,
    pub random_state: frand_state,
    pub start: timespec,
    pub epoch: timespec,
    pub alternate_epoch: libc::c_ulonglong,
    pub job_start: libc::c_ulonglong,
    pub last_issue: timespec,
    pub time_offset: libc::c_long,
    pub ts_cache: timespec,
    pub terminate_time: timespec,
    pub ts_cache_nr: libc::c_uint,
    pub ts_cache_mask: libc::c_uint,
    pub ramp_time_over: bool,
    pub latency_ts: timespec,
    pub latency_qd: libc::c_uint,
    pub latency_qd_high: libc::c_uint,
    pub latency_qd_low: libc::c_uint,
    pub latency_failed: libc::c_uint,
    pub latency_stable_count: libc::c_uint,
    pub latency_ios: u64,
    pub latency_end_run: libc::c_int,
    pub rwmix_state: frand_state,
    pub rwmix_issues: libc::c_ulong,
    pub rwmix_ddir: fio_ddir,
    pub ddir_seq_nr: libc::c_uint,
    pub seq_rand_state: [frand_state; 3usize],
    pub io_hist_tree: rb_root,
    pub io_hist_list: flist_head,
    pub io_hist_len: libc::c_ulong,
    pub io_log_list: flist_head,
    pub io_log_rfile: *mut FILE,
    pub io_log_blktrace: libc::c_uint,
    pub io_log_blktrace_swap: libc::c_uint,
    pub io_log_last_ttime: libc::c_ulonglong,
    pub io_log_start_time: timespec,
    pub io_log_current: libc::c_uint,
    pub io_log_checkmark: libc::c_uint,
    pub io_log_highmark: libc::c_uint,
    pub io_log_version: libc::c_uint,
    pub io_log_highmark_time: timespec,
    pub trim_list: flist_head,
    pub trim_entries: libc::c_ulong,
    pub file_service_nr: libc::c_uint,
    pub file_service_left: libc::c_uint,
    pub file_service_file: *mut fio_file,
    pub sync_file_range_nr: libc::c_uint,
    pub file_size_state: frand_state,
    pub total_err_count: libc::c_uint,
    pub first_error: libc::c_int,
    pub flow: *mut fio_flow,
    pub flow_counter: libc::c_ulonglong,
    pub prof_io_ops: prof_io_ops,
    pub prof_data: *mut libc::c_void,
    pub pinned_mem: *mut libc::c_void,
    pub ss: steadystate_data,
    pub verror: [libc::c_char; 128usize],
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union thread_data__bindgen_ty_1 {
    pub next_file:       libc::c_uint,
    pub next_file_state: frand_state,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of thread_data__bindgen_ty_1"]
        [::std::mem::size_of::<thread_data__bindgen_ty_1>() - 48usize];
    ["Alignment of thread_data__bindgen_ty_1"]
        [::std::mem::align_of::<thread_data__bindgen_ty_1>() - 8usize];
    ["Offset of field: thread_data__bindgen_ty_1::next_file"]
        [::std::mem::offset_of!(thread_data__bindgen_ty_1, next_file) - 0usize];
    ["Offset of field: thread_data__bindgen_ty_1::next_file_state"][::std::mem::offset_of!(
        thread_data__bindgen_ty_1,
        next_file_state
    ) - 0usize];
};
#[repr(C)]
#[derive(Copy, Clone)]
pub union thread_data__bindgen_ty_2 {
    pub next_file_zipf:  zipf_state,
    pub next_file_gauss: gauss_state,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of thread_data__bindgen_ty_2"]
        [::std::mem::size_of::<thread_data__bindgen_ty_2>() - 104usize];
    ["Alignment of thread_data__bindgen_ty_2"]
        [::std::mem::align_of::<thread_data__bindgen_ty_2>() - 8usize];
    ["Offset of field: thread_data__bindgen_ty_2::next_file_zipf"][::std::mem::offset_of!(
        thread_data__bindgen_ty_2,
        next_file_zipf
    ) - 0usize];
    ["Offset of field: thread_data__bindgen_ty_2::next_file_gauss"][::std::mem::offset_of!(
        thread_data__bindgen_ty_2,
        next_file_gauss
    ) - 0usize];
};
#[repr(C)]
#[derive(Copy, Clone)]
pub union thread_data__bindgen_ty_3 {
    pub zipf_theta: f64,
    pub pareto_h:   f64,
    pub gauss_dev:  f64,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of thread_data__bindgen_ty_3"]
        [::std::mem::size_of::<thread_data__bindgen_ty_3>() - 8usize];
    ["Alignment of thread_data__bindgen_ty_3"]
        [::std::mem::align_of::<thread_data__bindgen_ty_3>() - 8usize];
    ["Offset of field: thread_data__bindgen_ty_3::zipf_theta"][::std::mem::offset_of!(
        thread_data__bindgen_ty_3,
        zipf_theta
    ) - 0usize];
    ["Offset of field: thread_data__bindgen_ty_3::pareto_h"]
        [::std::mem::offset_of!(thread_data__bindgen_ty_3, pareto_h) - 0usize];
    ["Offset of field: thread_data__bindgen_ty_3::gauss_dev"]
        [::std::mem::offset_of!(thread_data__bindgen_ty_3, gauss_dev) - 0usize];
};
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of thread_data"][::std::mem::size_of::<thread_data>() - 191168usize];
    ["Alignment of thread_data"]
        [::std::mem::align_of::<thread_data>() - 8usize];
    ["Offset of field: thread_data::opt_list"]
        [::std::mem::offset_of!(thread_data, opt_list) - 0usize];
    ["Offset of field: thread_data::flags"]
        [::std::mem::offset_of!(thread_data, flags) - 16usize];
    ["Offset of field: thread_data::o"]
        [::std::mem::offset_of!(thread_data, o) - 24usize];
    ["Offset of field: thread_data::eo"]
        [::std::mem::offset_of!(thread_data, eo) - 3520usize];
    ["Offset of field: thread_data::thread"]
        [::std::mem::offset_of!(thread_data, thread) - 3528usize];
    ["Offset of field: thread_data::thread_number"]
        [::std::mem::offset_of!(thread_data, thread_number) - 3536usize];
    ["Offset of field: thread_data::subjob_number"]
        [::std::mem::offset_of!(thread_data, subjob_number) - 3540usize];
    ["Offset of field: thread_data::groupid"]
        [::std::mem::offset_of!(thread_data, groupid) - 3544usize];
    ["Offset of field: thread_data::ts"]
        [::std::mem::offset_of!(thread_data, ts) - 3552usize];
    ["Offset of field: thread_data::client_type"]
        [::std::mem::offset_of!(thread_data, client_type) - 187448usize];
    ["Offset of field: thread_data::slat_log"]
        [::std::mem::offset_of!(thread_data, slat_log) - 187456usize];
    ["Offset of field: thread_data::clat_log"]
        [::std::mem::offset_of!(thread_data, clat_log) - 187464usize];
    ["Offset of field: thread_data::clat_hist_log"]
        [::std::mem::offset_of!(thread_data, clat_hist_log) - 187472usize];
    ["Offset of field: thread_data::lat_log"]
        [::std::mem::offset_of!(thread_data, lat_log) - 187480usize];
    ["Offset of field: thread_data::bw_log"]
        [::std::mem::offset_of!(thread_data, bw_log) - 187488usize];
    ["Offset of field: thread_data::iops_log"]
        [::std::mem::offset_of!(thread_data, iops_log) - 187496usize];
    ["Offset of field: thread_data::log_compress_wq"]
        [::std::mem::offset_of!(thread_data, log_compress_wq) - 187504usize];
    ["Offset of field: thread_data::parent"]
        [::std::mem::offset_of!(thread_data, parent) - 187648usize];
    ["Offset of field: thread_data::stat_io_bytes"]
        [::std::mem::offset_of!(thread_data, stat_io_bytes) - 187656usize];
    ["Offset of field: thread_data::bw_sample_time"]
        [::std::mem::offset_of!(thread_data, bw_sample_time) - 187680usize];
    ["Offset of field: thread_data::stat_io_blocks"]
        [::std::mem::offset_of!(thread_data, stat_io_blocks) - 187696usize];
    ["Offset of field: thread_data::iops_sample_time"]
        [::std::mem::offset_of!(thread_data, iops_sample_time) - 187720usize];
    ["Offset of field: thread_data::update_rusage"]
        [::std::mem::offset_of!(thread_data, update_rusage) - 187736usize];
    ["Offset of field: thread_data::rusage_sem"]
        [::std::mem::offset_of!(thread_data, rusage_sem) - 187744usize];
    ["Offset of field: thread_data::ru_start"]
        [::std::mem::offset_of!(thread_data, ru_start) - 187752usize];
    ["Offset of field: thread_data::ru_end"]
        [::std::mem::offset_of!(thread_data, ru_end) - 187896usize];
    ["Offset of field: thread_data::files"]
        [::std::mem::offset_of!(thread_data, files) - 188040usize];
    ["Offset of field: thread_data::file_locks"]
        [::std::mem::offset_of!(thread_data, file_locks) - 188048usize];
    ["Offset of field: thread_data::files_size"]
        [::std::mem::offset_of!(thread_data, files_size) - 188056usize];
    ["Offset of field: thread_data::files_index"]
        [::std::mem::offset_of!(thread_data, files_index) - 188060usize];
    ["Offset of field: thread_data::nr_open_files"]
        [::std::mem::offset_of!(thread_data, nr_open_files) - 188064usize];
    ["Offset of field: thread_data::nr_done_files"]
        [::std::mem::offset_of!(thread_data, nr_done_files) - 188068usize];
    ["Offset of field: thread_data::random_center"]
        [::std::mem::offset_of!(thread_data, random_center) - 188232usize];
    ["Offset of field: thread_data::error"]
        [::std::mem::offset_of!(thread_data, error) - 188240usize];
    ["Offset of field: thread_data::sig"]
        [::std::mem::offset_of!(thread_data, sig) - 188244usize];
    ["Offset of field: thread_data::done"]
        [::std::mem::offset_of!(thread_data, done) - 188248usize];
    ["Offset of field: thread_data::stop_io"]
        [::std::mem::offset_of!(thread_data, stop_io) - 188252usize];
    ["Offset of field: thread_data::pid"]
        [::std::mem::offset_of!(thread_data, pid) - 188256usize];
    ["Offset of field: thread_data::orig_buffer"]
        [::std::mem::offset_of!(thread_data, orig_buffer) - 188264usize];
    ["Offset of field: thread_data::orig_buffer_size"]
        [::std::mem::offset_of!(thread_data, orig_buffer_size) - 188272usize];
    ["Offset of field: thread_data::runstate"]
        [::std::mem::offset_of!(thread_data, runstate) - 188280usize];
    ["Offset of field: thread_data::terminate"]
        [::std::mem::offset_of!(thread_data, terminate) - 188284usize];
    ["Offset of field: thread_data::last_ddir_completed"][::std::mem::offset_of!(
        thread_data,
        last_ddir_completed
    ) - 188288usize];
    ["Offset of field: thread_data::last_ddir_issued"]
        [::std::mem::offset_of!(thread_data, last_ddir_issued) - 188292usize];
    ["Offset of field: thread_data::mmapfd"]
        [::std::mem::offset_of!(thread_data, mmapfd) - 188296usize];
    ["Offset of field: thread_data::iolog_buf"]
        [::std::mem::offset_of!(thread_data, iolog_buf) - 188304usize];
    ["Offset of field: thread_data::iolog_f"]
        [::std::mem::offset_of!(thread_data, iolog_f) - 188312usize];
    ["Offset of field: thread_data::rand_seeds"]
        [::std::mem::offset_of!(thread_data, rand_seeds) - 188320usize];
    ["Offset of field: thread_data::bsrange_state"]
        [::std::mem::offset_of!(thread_data, bsrange_state) - 188496usize];
    ["Offset of field: thread_data::verify_state"]
        [::std::mem::offset_of!(thread_data, verify_state) - 188640usize];
    ["Offset of field: thread_data::verify_state_last_do_io"][::std::mem::offset_of!(
        thread_data,
        verify_state_last_do_io
    ) - 188688usize];
    ["Offset of field: thread_data::trim_state"]
        [::std::mem::offset_of!(thread_data, trim_state) - 188736usize];
    ["Offset of field: thread_data::delay_state"]
        [::std::mem::offset_of!(thread_data, delay_state) - 188784usize];
    ["Offset of field: thread_data::fdp_state"]
        [::std::mem::offset_of!(thread_data, fdp_state) - 188832usize];
    ["Offset of field: thread_data::buf_state"]
        [::std::mem::offset_of!(thread_data, buf_state) - 188880usize];
    ["Offset of field: thread_data::buf_state_prev"]
        [::std::mem::offset_of!(thread_data, buf_state_prev) - 188928usize];
    ["Offset of field: thread_data::buf_state_ret"]
        [::std::mem::offset_of!(thread_data, buf_state_ret) - 188976usize];
    ["Offset of field: thread_data::dedupe_state"]
        [::std::mem::offset_of!(thread_data, dedupe_state) - 189024usize];
    ["Offset of field: thread_data::zone_state"]
        [::std::mem::offset_of!(thread_data, zone_state) - 189072usize];
    ["Offset of field: thread_data::prio_state"]
        [::std::mem::offset_of!(thread_data, prio_state) - 189120usize];
    ["Offset of field: thread_data::dedupe_working_set_index_state"][::std::mem::offset_of!(
        thread_data,
        dedupe_working_set_index_state
    ) -
        189168usize];
    ["Offset of field: thread_data::dedupe_working_set_states"][::std::mem::offset_of!(
        thread_data,
        dedupe_working_set_states
    ) -
        189216usize];
    ["Offset of field: thread_data::num_unique_pages"]
        [::std::mem::offset_of!(thread_data, num_unique_pages) - 189224usize];
    ["Offset of field: thread_data::zone_state_index"]
        [::std::mem::offset_of!(thread_data, zone_state_index) - 189232usize];
    ["Offset of field: thread_data::num_write_zones"]
        [::std::mem::offset_of!(thread_data, num_write_zones) - 189240usize];
    ["Offset of field: thread_data::verify_batch"]
        [::std::mem::offset_of!(thread_data, verify_batch) - 189244usize];
    ["Offset of field: thread_data::trim_batch"]
        [::std::mem::offset_of!(thread_data, trim_batch) - 189248usize];
    ["Offset of field: thread_data::vstate"]
        [::std::mem::offset_of!(thread_data, vstate) - 189256usize];
    ["Offset of field: thread_data::shm_id"]
        [::std::mem::offset_of!(thread_data, shm_id) - 189264usize];
    ["Offset of field: thread_data::ioprio"]
        [::std::mem::offset_of!(thread_data, ioprio) - 189268usize];
    ["Offset of field: thread_data::io_ops"]
        [::std::mem::offset_of!(thread_data, io_ops) - 189272usize];
    ["Offset of field: thread_data::io_ops_init"]
        [::std::mem::offset_of!(thread_data, io_ops_init) - 189280usize];
    ["Offset of field: thread_data::io_ops_data"]
        [::std::mem::offset_of!(thread_data, io_ops_data) - 189288usize];
    ["Offset of field: thread_data::cur_depth"]
        [::std::mem::offset_of!(thread_data, cur_depth) - 189296usize];
    ["Offset of field: thread_data::io_u_queued"]
        [::std::mem::offset_of!(thread_data, io_u_queued) - 189300usize];
    ["Offset of field: thread_data::io_u_in_flight"]
        [::std::mem::offset_of!(thread_data, io_u_in_flight) - 189304usize];
    ["Offset of field: thread_data::io_u_requeues"]
        [::std::mem::offset_of!(thread_data, io_u_requeues) - 189312usize];
    ["Offset of field: thread_data::io_u_freelist"]
        [::std::mem::offset_of!(thread_data, io_u_freelist) - 189336usize];
    ["Offset of field: thread_data::io_u_all"]
        [::std::mem::offset_of!(thread_data, io_u_all) - 189352usize];
    ["Offset of field: thread_data::io_u_lock"]
        [::std::mem::offset_of!(thread_data, io_u_lock) - 189368usize];
    ["Offset of field: thread_data::free_cond"]
        [::std::mem::offset_of!(thread_data, free_cond) - 189376usize];
    ["Offset of field: thread_data::verify_list"]
        [::std::mem::offset_of!(thread_data, verify_list) - 189384usize];
    ["Offset of field: thread_data::verify_threads"]
        [::std::mem::offset_of!(thread_data, verify_threads) - 189400usize];
    ["Offset of field: thread_data::nr_verify_threads"]
        [::std::mem::offset_of!(thread_data, nr_verify_threads) - 189408usize];
    ["Offset of field: thread_data::verify_cond"]
        [::std::mem::offset_of!(thread_data, verify_cond) - 189416usize];
    ["Offset of field: thread_data::verify_thread_exit"]
        [::std::mem::offset_of!(thread_data, verify_thread_exit) - 189424usize];
    ["Offset of field: thread_data::rate_bps"]
        [::std::mem::offset_of!(thread_data, rate_bps) - 189432usize];
    ["Offset of field: thread_data::rate_next_io_time"]
        [::std::mem::offset_of!(thread_data, rate_next_io_time) - 189456usize];
    ["Offset of field: thread_data::last_rate_check_bytes"][::std::mem::offset_of!(
        thread_data,
        last_rate_check_bytes
    ) - 189480usize];
    ["Offset of field: thread_data::last_rate_check_blocks"][::std::mem::offset_of!(
        thread_data,
        last_rate_check_blocks
    ) - 189504usize];
    ["Offset of field: thread_data::rate_io_issue_bytes"][::std::mem::offset_of!(
        thread_data,
        rate_io_issue_bytes
    ) - 189528usize];
    ["Offset of field: thread_data::last_rate_check_time"][::std::mem::offset_of!(
        thread_data,
        last_rate_check_time
    ) - 189552usize];
    ["Offset of field: thread_data::last_usec"]
        [::std::mem::offset_of!(thread_data, last_usec) - 189600usize];
    ["Offset of field: thread_data::poisson_state"]
        [::std::mem::offset_of!(thread_data, poisson_state) - 189624usize];
    ["Offset of field: thread_data::io_wq"]
        [::std::mem::offset_of!(thread_data, io_wq) - 189768usize];
    ["Offset of field: thread_data::total_io_size"]
        [::std::mem::offset_of!(thread_data, total_io_size) - 189912usize];
    ["Offset of field: thread_data::fill_device_size"]
        [::std::mem::offset_of!(thread_data, fill_device_size) - 189920usize];
    ["Offset of field: thread_data::io_issues"]
        [::std::mem::offset_of!(thread_data, io_issues) - 189928usize];
    ["Offset of field: thread_data::verify_read_issues"]
        [::std::mem::offset_of!(thread_data, verify_read_issues) - 189952usize];
    ["Offset of field: thread_data::io_issue_bytes"]
        [::std::mem::offset_of!(thread_data, io_issue_bytes) - 189960usize];
    ["Offset of field: thread_data::loops"]
        [::std::mem::offset_of!(thread_data, loops) - 189984usize];
    ["Offset of field: thread_data::io_blocks"]
        [::std::mem::offset_of!(thread_data, io_blocks) - 189992usize];
    ["Offset of field: thread_data::this_io_blocks"]
        [::std::mem::offset_of!(thread_data, this_io_blocks) - 190016usize];
    ["Offset of field: thread_data::io_bytes"]
        [::std::mem::offset_of!(thread_data, io_bytes) - 190040usize];
    ["Offset of field: thread_data::this_io_bytes"]
        [::std::mem::offset_of!(thread_data, this_io_bytes) - 190064usize];
    ["Offset of field: thread_data::io_skip_bytes"]
        [::std::mem::offset_of!(thread_data, io_skip_bytes) - 190088usize];
    ["Offset of field: thread_data::zone_bytes"]
        [::std::mem::offset_of!(thread_data, zone_bytes) - 190096usize];
    ["Offset of field: thread_data::sem"]
        [::std::mem::offset_of!(thread_data, sem) - 190104usize];
    ["Offset of field: thread_data::bytes_done"]
        [::std::mem::offset_of!(thread_data, bytes_done) - 190112usize];
    ["Offset of field: thread_data::bytes_verified"]
        [::std::mem::offset_of!(thread_data, bytes_verified) - 190136usize];
    ["Offset of field: thread_data::thinktime_blocks_counter"][::std::mem::offset_of!(
        thread_data,
        thinktime_blocks_counter
    ) - 190144usize];
    ["Offset of field: thread_data::last_thinktime"]
        [::std::mem::offset_of!(thread_data, last_thinktime) - 190152usize];
    ["Offset of field: thread_data::last_thinktime_blocks"][::std::mem::offset_of!(
        thread_data,
        last_thinktime_blocks
    ) - 190168usize];
    ["Offset of field: thread_data::random_state"]
        [::std::mem::offset_of!(thread_data, random_state) - 190176usize];
    ["Offset of field: thread_data::start"]
        [::std::mem::offset_of!(thread_data, start) - 190224usize];
    ["Offset of field: thread_data::epoch"]
        [::std::mem::offset_of!(thread_data, epoch) - 190240usize];
    ["Offset of field: thread_data::alternate_epoch"]
        [::std::mem::offset_of!(thread_data, alternate_epoch) - 190256usize];
    ["Offset of field: thread_data::job_start"]
        [::std::mem::offset_of!(thread_data, job_start) - 190264usize];
    ["Offset of field: thread_data::last_issue"]
        [::std::mem::offset_of!(thread_data, last_issue) - 190272usize];
    ["Offset of field: thread_data::time_offset"]
        [::std::mem::offset_of!(thread_data, time_offset) - 190288usize];
    ["Offset of field: thread_data::ts_cache"]
        [::std::mem::offset_of!(thread_data, ts_cache) - 190296usize];
    ["Offset of field: thread_data::terminate_time"]
        [::std::mem::offset_of!(thread_data, terminate_time) - 190312usize];
    ["Offset of field: thread_data::ts_cache_nr"]
        [::std::mem::offset_of!(thread_data, ts_cache_nr) - 190328usize];
    ["Offset of field: thread_data::ts_cache_mask"]
        [::std::mem::offset_of!(thread_data, ts_cache_mask) - 190332usize];
    ["Offset of field: thread_data::ramp_time_over"]
        [::std::mem::offset_of!(thread_data, ramp_time_over) - 190336usize];
    ["Offset of field: thread_data::latency_ts"]
        [::std::mem::offset_of!(thread_data, latency_ts) - 190344usize];
    ["Offset of field: thread_data::latency_qd"]
        [::std::mem::offset_of!(thread_data, latency_qd) - 190360usize];
    ["Offset of field: thread_data::latency_qd_high"]
        [::std::mem::offset_of!(thread_data, latency_qd_high) - 190364usize];
    ["Offset of field: thread_data::latency_qd_low"]
        [::std::mem::offset_of!(thread_data, latency_qd_low) - 190368usize];
    ["Offset of field: thread_data::latency_failed"]
        [::std::mem::offset_of!(thread_data, latency_failed) - 190372usize];
    ["Offset of field: thread_data::latency_stable_count"][::std::mem::offset_of!(
        thread_data,
        latency_stable_count
    ) - 190376usize];
    ["Offset of field: thread_data::latency_ios"]
        [::std::mem::offset_of!(thread_data, latency_ios) - 190384usize];
    ["Offset of field: thread_data::latency_end_run"]
        [::std::mem::offset_of!(thread_data, latency_end_run) - 190392usize];
    ["Offset of field: thread_data::rwmix_state"]
        [::std::mem::offset_of!(thread_data, rwmix_state) - 190400usize];
    ["Offset of field: thread_data::rwmix_issues"]
        [::std::mem::offset_of!(thread_data, rwmix_issues) - 190448usize];
    ["Offset of field: thread_data::rwmix_ddir"]
        [::std::mem::offset_of!(thread_data, rwmix_ddir) - 190456usize];
    ["Offset of field: thread_data::ddir_seq_nr"]
        [::std::mem::offset_of!(thread_data, ddir_seq_nr) - 190460usize];
    ["Offset of field: thread_data::seq_rand_state"]
        [::std::mem::offset_of!(thread_data, seq_rand_state) - 190464usize];
    ["Offset of field: thread_data::io_hist_tree"]
        [::std::mem::offset_of!(thread_data, io_hist_tree) - 190608usize];
    ["Offset of field: thread_data::io_hist_list"]
        [::std::mem::offset_of!(thread_data, io_hist_list) - 190616usize];
    ["Offset of field: thread_data::io_hist_len"]
        [::std::mem::offset_of!(thread_data, io_hist_len) - 190632usize];
    ["Offset of field: thread_data::io_log_list"]
        [::std::mem::offset_of!(thread_data, io_log_list) - 190640usize];
    ["Offset of field: thread_data::io_log_rfile"]
        [::std::mem::offset_of!(thread_data, io_log_rfile) - 190656usize];
    ["Offset of field: thread_data::io_log_blktrace"]
        [::std::mem::offset_of!(thread_data, io_log_blktrace) - 190664usize];
    ["Offset of field: thread_data::io_log_blktrace_swap"][::std::mem::offset_of!(
        thread_data,
        io_log_blktrace_swap
    ) - 190668usize];
    ["Offset of field: thread_data::io_log_last_ttime"]
        [::std::mem::offset_of!(thread_data, io_log_last_ttime) - 190672usize];
    ["Offset of field: thread_data::io_log_start_time"]
        [::std::mem::offset_of!(thread_data, io_log_start_time) - 190680usize];
    ["Offset of field: thread_data::io_log_current"]
        [::std::mem::offset_of!(thread_data, io_log_current) - 190696usize];
    ["Offset of field: thread_data::io_log_checkmark"]
        [::std::mem::offset_of!(thread_data, io_log_checkmark) - 190700usize];
    ["Offset of field: thread_data::io_log_highmark"]
        [::std::mem::offset_of!(thread_data, io_log_highmark) - 190704usize];
    ["Offset of field: thread_data::io_log_version"]
        [::std::mem::offset_of!(thread_data, io_log_version) - 190708usize];
    ["Offset of field: thread_data::io_log_highmark_time"][::std::mem::offset_of!(
        thread_data,
        io_log_highmark_time
    ) - 190712usize];
    ["Offset of field: thread_data::trim_list"]
        [::std::mem::offset_of!(thread_data, trim_list) - 190728usize];
    ["Offset of field: thread_data::trim_entries"]
        [::std::mem::offset_of!(thread_data, trim_entries) - 190744usize];
    ["Offset of field: thread_data::file_service_nr"]
        [::std::mem::offset_of!(thread_data, file_service_nr) - 190752usize];
    ["Offset of field: thread_data::file_service_left"]
        [::std::mem::offset_of!(thread_data, file_service_left) - 190756usize];
    ["Offset of field: thread_data::file_service_file"]
        [::std::mem::offset_of!(thread_data, file_service_file) - 190760usize];
    ["Offset of field: thread_data::sync_file_range_nr"]
        [::std::mem::offset_of!(thread_data, sync_file_range_nr) - 190768usize];
    ["Offset of field: thread_data::file_size_state"]
        [::std::mem::offset_of!(thread_data, file_size_state) - 190776usize];
    ["Offset of field: thread_data::total_err_count"]
        [::std::mem::offset_of!(thread_data, total_err_count) - 190824usize];
    ["Offset of field: thread_data::first_error"]
        [::std::mem::offset_of!(thread_data, first_error) - 190828usize];
    ["Offset of field: thread_data::flow"]
        [::std::mem::offset_of!(thread_data, flow) - 190832usize];
    ["Offset of field: thread_data::flow_counter"]
        [::std::mem::offset_of!(thread_data, flow_counter) - 190840usize];
    ["Offset of field: thread_data::prof_io_ops"]
        [::std::mem::offset_of!(thread_data, prof_io_ops) - 190848usize];
    ["Offset of field: thread_data::prof_data"]
        [::std::mem::offset_of!(thread_data, prof_data) - 190872usize];
    ["Offset of field: thread_data::pinned_mem"]
        [::std::mem::offset_of!(thread_data, pinned_mem) - 190880usize];
    ["Offset of field: thread_data::ss"]
        [::std::mem::offset_of!(thread_data, ss) - 190888usize];
    ["Offset of field: thread_data::verror"]
        [::std::mem::offset_of!(thread_data, verror) - 191040usize];
};
pub const opt_category___FIO_OPT_C_GENERAL: opt_category = 0;
pub const opt_category___FIO_OPT_C_IO: opt_category = 1;
pub const opt_category___FIO_OPT_C_FILE: opt_category = 2;
pub const opt_category___FIO_OPT_C_STAT: opt_category = 3;
pub const opt_category___FIO_OPT_C_LOG: opt_category = 4;
pub const opt_category___FIO_OPT_C_PROFILE: opt_category = 5;
pub const opt_category___FIO_OPT_C_ENGINE: opt_category = 6;
pub const opt_category___FIO_OPT_C_NR: opt_category = 7;
pub const opt_category_FIO_OPT_C_GENERAL: opt_category = 1;
pub const opt_category_FIO_OPT_C_IO: opt_category = 2;
pub const opt_category_FIO_OPT_C_FILE: opt_category = 4;
pub const opt_category_FIO_OPT_C_STAT: opt_category = 8;
pub const opt_category_FIO_OPT_C_LOG: opt_category = 16;
pub const opt_category_FIO_OPT_C_PROFILE: opt_category = 32;
pub const opt_category_FIO_OPT_C_ENGINE: opt_category = 64;
pub const opt_category_FIO_OPT_C_INVALID: opt_category = 128;
pub type opt_category = libc::c_uint;
pub const opt_category_group___FIO_OPT_G_RATE: opt_category_group = 0;
pub const opt_category_group___FIO_OPT_G_ZONE: opt_category_group = 1;
pub const opt_category_group___FIO_OPT_G_RWMIX: opt_category_group = 2;
pub const opt_category_group___FIO_OPT_G_VERIFY: opt_category_group = 3;
pub const opt_category_group___FIO_OPT_G_TRIM: opt_category_group = 4;
pub const opt_category_group___FIO_OPT_G_IOLOG: opt_category_group = 5;
pub const opt_category_group___FIO_OPT_G_IO_DEPTH: opt_category_group = 6;
pub const opt_category_group___FIO_OPT_G_IO_FLOW: opt_category_group = 7;
pub const opt_category_group___FIO_OPT_G_DESC: opt_category_group = 8;
pub const opt_category_group___FIO_OPT_G_FILENAME: opt_category_group = 9;
pub const opt_category_group___FIO_OPT_G_IO_BASIC: opt_category_group = 10;
pub const opt_category_group___FIO_OPT_G_CGROUP: opt_category_group = 11;
pub const opt_category_group___FIO_OPT_G_RUNTIME: opt_category_group = 12;
pub const opt_category_group___FIO_OPT_G_PROCESS: opt_category_group = 13;
pub const opt_category_group___FIO_OPT_G_CRED: opt_category_group = 14;
pub const opt_category_group___FIO_OPT_G_CLOCK: opt_category_group = 15;
pub const opt_category_group___FIO_OPT_G_IO_TYPE: opt_category_group = 16;
pub const opt_category_group___FIO_OPT_G_THINKTIME: opt_category_group = 17;
pub const opt_category_group___FIO_OPT_G_RANDOM: opt_category_group = 18;
pub const opt_category_group___FIO_OPT_G_IO_BUF: opt_category_group = 19;
pub const opt_category_group___FIO_OPT_G_TIOBENCH: opt_category_group = 20;
pub const opt_category_group___FIO_OPT_G_ERR: opt_category_group = 21;
pub const opt_category_group___FIO_OPT_G_E4DEFRAG: opt_category_group = 22;
pub const opt_category_group___FIO_OPT_G_NETIO: opt_category_group = 23;
pub const opt_category_group___FIO_OPT_G_RDMA: opt_category_group = 24;
pub const opt_category_group___FIO_OPT_G_LIBAIO: opt_category_group = 25;
pub const opt_category_group___FIO_OPT_G_ACT: opt_category_group = 26;
pub const opt_category_group___FIO_OPT_G_LATPROF: opt_category_group = 27;
pub const opt_category_group___FIO_OPT_G_RBD: opt_category_group = 28;
pub const opt_category_group___FIO_OPT_G_HTTP: opt_category_group = 29;
pub const opt_category_group___FIO_OPT_G_GFAPI: opt_category_group = 30;
pub const opt_category_group___FIO_OPT_G_MTD: opt_category_group = 31;
pub const opt_category_group___FIO_OPT_G_HDFS: opt_category_group = 32;
pub const opt_category_group___FIO_OPT_G_SG: opt_category_group = 33;
pub const opt_category_group___FIO_OPT_G_MMAP: opt_category_group = 34;
pub const opt_category_group___FIO_OPT_G_ISCSI: opt_category_group = 35;
pub const opt_category_group___FIO_OPT_G_NBD: opt_category_group = 36;
pub const opt_category_group___FIO_OPT_G_IOURING: opt_category_group = 37;
pub const opt_category_group___FIO_OPT_G_FILESTAT: opt_category_group = 38;
pub const opt_category_group___FIO_OPT_G_NR: opt_category_group = 39;
pub const opt_category_group___FIO_OPT_G_LIBCUFILE: opt_category_group = 40;
pub const opt_category_group___FIO_OPT_G_DFS: opt_category_group = 41;
pub const opt_category_group___FIO_OPT_G_NFS: opt_category_group = 42;
pub const opt_category_group___FIO_OPT_G_WINDOWSAIO: opt_category_group = 43;
pub const opt_category_group___FIO_OPT_G_XNVME: opt_category_group = 44;
pub const opt_category_group___FIO_OPT_G_LIBBLKIO: opt_category_group = 45;
pub const opt_category_group_FIO_OPT_G_RATE: opt_category_group = 1;
pub const opt_category_group_FIO_OPT_G_ZONE: opt_category_group = 2;
pub const opt_category_group_FIO_OPT_G_RWMIX: opt_category_group = 4;
pub const opt_category_group_FIO_OPT_G_VERIFY: opt_category_group = 8;
pub const opt_category_group_FIO_OPT_G_TRIM: opt_category_group = 16;
pub const opt_category_group_FIO_OPT_G_IOLOG: opt_category_group = 32;
pub const opt_category_group_FIO_OPT_G_IO_DEPTH: opt_category_group = 64;
pub const opt_category_group_FIO_OPT_G_IO_FLOW: opt_category_group = 128;
pub const opt_category_group_FIO_OPT_G_DESC: opt_category_group = 256;
pub const opt_category_group_FIO_OPT_G_FILENAME: opt_category_group = 512;
pub const opt_category_group_FIO_OPT_G_IO_BASIC: opt_category_group = 1024;
pub const opt_category_group_FIO_OPT_G_CGROUP: opt_category_group = 2048;
pub const opt_category_group_FIO_OPT_G_RUNTIME: opt_category_group = 4096;
pub const opt_category_group_FIO_OPT_G_PROCESS: opt_category_group = 8192;
pub const opt_category_group_FIO_OPT_G_CRED: opt_category_group = 16384;
pub const opt_category_group_FIO_OPT_G_CLOCK: opt_category_group = 32768;
pub const opt_category_group_FIO_OPT_G_IO_TYPE: opt_category_group = 65536;
pub const opt_category_group_FIO_OPT_G_THINKTIME: opt_category_group = 131072;
pub const opt_category_group_FIO_OPT_G_RANDOM: opt_category_group = 262144;
pub const opt_category_group_FIO_OPT_G_IO_BUF: opt_category_group = 524288;
pub const opt_category_group_FIO_OPT_G_TIOBENCH: opt_category_group = 1048576;
pub const opt_category_group_FIO_OPT_G_ERR: opt_category_group = 2097152;
pub const opt_category_group_FIO_OPT_G_E4DEFRAG: opt_category_group = 4194304;
pub const opt_category_group_FIO_OPT_G_NETIO: opt_category_group = 8388608;
pub const opt_category_group_FIO_OPT_G_RDMA: opt_category_group = 16777216;
pub const opt_category_group_FIO_OPT_G_LIBAIO: opt_category_group = 33554432;
pub const opt_category_group_FIO_OPT_G_ACT: opt_category_group = 67108864;
pub const opt_category_group_FIO_OPT_G_LATPROF: opt_category_group = 134217728;
pub const opt_category_group_FIO_OPT_G_RBD: opt_category_group = 268435456;
pub const opt_category_group_FIO_OPT_G_HTTP: opt_category_group = 536870912;
pub const opt_category_group_FIO_OPT_G_GFAPI: opt_category_group = 1073741824;
pub const opt_category_group_FIO_OPT_G_MTD: opt_category_group = 2147483648;
pub const opt_category_group_FIO_OPT_G_HDFS: opt_category_group = 4294967296;
pub const opt_category_group_FIO_OPT_G_SG: opt_category_group = 8589934592;
pub const opt_category_group_FIO_OPT_G_MMAP: opt_category_group = 17179869184;
pub const opt_category_group_FIO_OPT_G_INVALID: opt_category_group =
    549755813888;
pub const opt_category_group_FIO_OPT_G_ISCSI: opt_category_group = 34359738368;
pub const opt_category_group_FIO_OPT_G_NBD: opt_category_group = 68719476736;
pub const opt_category_group_FIO_OPT_G_NFS: opt_category_group = 4398046511104;
pub const opt_category_group_FIO_OPT_G_IOURING: opt_category_group =
    137438953472;
pub const opt_category_group_FIO_OPT_G_FILESTAT: opt_category_group =
    274877906944;
pub const opt_category_group_FIO_OPT_G_LIBCUFILE: opt_category_group =
    1099511627776;
pub const opt_category_group_FIO_OPT_G_DFS: opt_category_group = 2199023255552;
pub const opt_category_group_FIO_OPT_G_WINDOWSAIO: opt_category_group =
    8796093022208;
pub const opt_category_group_FIO_OPT_G_XNVME: opt_category_group =
    17592186044416;
pub const opt_category_group_FIO_OPT_G_LIBBLKIO: opt_category_group =
    35184372088832;
pub type opt_category_group = libc::c_ulong;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct fio_rwlock {
    pub _address: u8,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct thread_io_list {
    pub _address: u8,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct fio_flow {
    pub _address: u8,
}
