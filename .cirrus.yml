setup: &SETUP
  env:
    HOME: /tmp # cargo needs it
    RUST_BACKTRACE: full  # Better info for debugging test failures.
  setup_script:
    - pkg install -y c-blosc isa-l fio fusefs-libs llvm pkgconf
    - fetch https://sh.rustup.rs -o rustup.sh
    - sh rustup.sh -y --profile=minimal
    - $HOME/.cargo/bin/rustup toolchain install $VERSION
    # In 12.2, aio on ufs is considered unsafe
    - sysctl vfs.aio.enable_unsafe=1
    - kldload fusefs

#task:
  #matrix:
    ## Use bleeding edge features: Rust nightly and FreeBSD fspacectl
    #- name: cargo test (nightly)
      #env:
        #VERSION: nightly
        #CARGO_ARGS: --all-features
      #freebsd_instance:
        #image_family: freebsd-14-0-snap
    ## Use stable features
    #- name: cargo test (stable)
      #env:
        #VERSION: 1.56.0
      #freebsd_instance:
        #image: freebsd-13-1-release-amd64
  #<< : *SETUP
  #cargo_cache:
    #folder: $HOME/.cargo/registry
    #fingerprint_script: cat Cargo.lock || echo ""
  #build_script:
    #- . $HOME/.cargo/env
    #- cargo +$VERSION build $CARGO_ARGS --all
  #test_script:
    #- . $HOME/.cargo/env
    #- cargo +$VERSION test $CARGO_ARGS --all --all-targets
  #fio_script:
    #- if [ `fio --version | sed 's:fio-3.::'` -ge 30 ]; then
    #-   . $HOME/.cargo/env
    #-   truncate -s 1g /tmp/bfffs.img
    #-   cargo +$VERSION run $CARGO_ARGS --bin bfffs -- pool create testpool /tmp/bfffs.img
    #-   fio bfffs-fio/data/ci.fio
    #- fi
  #fuseless_script:
    #- . $HOME/.cargo/env
    #- cd bfffs
    #- cargo +$VERSION check --no-default-features --all-targets
  #release_script:
    ## Release builds are too slow, and differ little from debug builds.  Just
    ## check that it would compile, but don't try to build it.
    #- . $HOME/.cargo/env
    #- cargo +$VERSION check $CARGO_ARGS --release --all --all-targets
  #before_cache_script: rm -rf $HOME/.cargo/registry/index

lint_task:
  name: lint
  env:
    VERSION: nightly
    CARGO_ARGS: --all-features
  freebsd_instance:
    image: freebsd-13-1-release-amd64
  << : *SETUP
  cargo_cache:
    folder: $HOME/.cargo/registry
  clippy_script:
    - . $HOME/.cargo/env
    - $HOME/.cargo/bin/rustup component add --toolchain $VERSION clippy
    - cargo +$VERSION clippy --all-features --all-targets -- -D warnings
  fmt_script:
    - . $HOME/.cargo/env
    - rustup component add --toolchain $VERSION rustfmt
    - cargo +$VERSION fmt --all -- --check --color=never
  audit_script:
    - pkg install -y cargo-audit
    - . $HOME/.cargo/env
    - cargo audit
  before_cache_script: rm -rf $CARGO_HOME/registry/index

# Cross build the lint task, because Cirrus can start Linux tasks faster than
# FreeBSD tasks.
linux_lint_task:
  name: lint beta
  env:
    VERSION: nightly
  container:
    image: rustlang/rust:nightly
  setup_script:
    - apt list cargo
    - apt list audit
    - rustup component add clippy
    - rustup component add rustfmt
    - rustup target add x86_64-unknown-freebsd
    - cargo install cargo-audit
  cargo_cache:
    folder: $HOME/.cargo/registry
  clippy_script:
    - cargo clippy --target x86_64-unknown-freebsd --all-features --all-targets -- -D warnings
  fmt_script:
    - cargo fmt --all -- --check --color=never
  audit_script:
    - cargo audit --target-os freebsd
  before_cache_script: rm -rf $CARGO_HOME/registry/index
