setup: &SETUP
  env:
    HOME: /tmp # cargo needs it
    RUST_BACKTRACE: full  # Better info for debugging test failures.
  setup_script:
    - pkg install -y c-blosc isa-l llvm pkgconf
    - fetch https://sh.rustup.rs -o rustup.sh
    - sh rustup.sh -y --profile=minimal --default-toolchain $VERSION
    # In 12.2, aio on ufs is considered unsafe
    - sysctl vfs.aio.enable_unsafe=1
    - kldload fusefs

task:
  use_compute_credits: $CIRRUS_USER_COLLABORATOR == 'true'
  matrix:
    # Use bleeding edge features: Rust nightly and FreeBSD fspacectl
    - name: cargo test (nightly)
      env:
        VERSION: nightly
        CARGO_ARGS: --all-features
      compute_engine_instance:
        image_project: freebsd-org-cloud-dev
        image: freebsd-14-2-release-amd64-ufs
        platform: freebsd
        cpu: 4
        disk: 40
    # Use stable features
    - name: cargo test (stable)
      env:
        VERSION: 1.80.0
      compute_engine_instance:
        image_project: freebsd-org-cloud-dev
        image: freebsd-13-5-release-amd64
        platform: freebsd
        cpu: 4
        disk: 40
  << : *SETUP
  cargo_cache:
    folder: $HOME/.cargo/registry
    fingerprint_script: cat Cargo.lock || echo ""
  build_script:
    - . $HOME/.cargo/env
    - cargo build $CARGO_ARGS --all
  test_script:
    - . $HOME/.cargo/env
    - cargo test $CARGO_ARGS --all --all-targets
  fio_script:
    # Restrict the fio job to FreeBSD 14, because the ioengine has to be built
    # separately for each fio version, the installed package doesn't include
    # its header files.  It also needs to be build separately for FreeBSD 14+
    # as for 13.
    # https://bugs.freebsd.org/bugzilla/show_bug.cgi?id=272960
    - if [ `uname -U` -ge 1400092 ]; then
    -   . $HOME/.cargo/env
    -   pkg install -y fio
    -   truncate -s 1g /tmp/bfffs.img
    -   cargo run $CARGO_ARGS --bin bfffs -- pool create testpool /tmp/bfffs.img
    -   fio bfffs-fio/data/ci.fio
    -   rm /tmp/bfffs.img
    - fi
  fuseless_script:
    - . $HOME/.cargo/env
    - cd bfffs
    - cargo check --no-default-features --all-targets
  release_script:
    # Release builds are too slow, and differ little from debug builds.  Just
    # check that it would compile, but don't try to build it.
    - . $HOME/.cargo/env
    - cargo check $CARGO_ARGS --release --all --all-targets
  before_cache_script: rm -rf $HOME/.cargo/registry/index

lint_task:
  use_compute_credits: $CIRRUS_USER_COLLABORATOR == 'true'
  name: lint
  env:
    VERSION: nightly
    CARGO_ARGS: --all-features
  freebsd_instance:
    image: freebsd-13-5-release-amd64
  << : *SETUP
  cargo_cache:
    folder: $HOME/.cargo/registry
    fingerprint_script: cat Cargo.lock || echo ""
  clippy_script:
    - . $HOME/.cargo/env
    - $HOME/.cargo/bin/rustup component add clippy
    - cargo clippy --all-features --all-targets -- -D warnings
  fmt_script:
    - . $HOME/.cargo/env
    - rustup component add rustfmt
    - cargo fmt --all -- --check --color=never
  audit_script:
    - pkg install -y ca_root_nss cargo-audit
    - . $HOME/.cargo/env
    - cargo audit
  minver_script:
    - . $HOME/.cargo/env
    - cargo update -Zdirect-minimal-versions
    - cargo check --all-features --all-targets
  before_cache_script: rm -rf $CARGO_HOME/registry/index
